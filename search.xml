<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Python超时机制两种办法</title>
      <link href="/posts/2137572860/"/>
      <url>/posts/2137572860/</url>
      
        <content type="html"><![CDATA[<h1 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h1><p>最近做项目有一个问题，需要使用Python自动化测试apk，需要控制自动化测试的时间，设置超时时间，超时后直接跳过不运行，以及判断超时的时候可以打印日志记录</p><a id="more"></a><h1 id="python超时控制的两种办法简单不复杂"><a class="markdownIt-Anchor" href="#python超时控制的两种办法简单不复杂"></a> Python超时控制的两种办法（简单不复杂）</h1><h2 id="引入eventlet"><a class="markdownIt-Anchor" href="#引入eventlet"></a> 引入eventlet</h2><p>例子如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> eventlet</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test_timeout</span><span class="params">(timeout_time)</span>:</span></span><br><span class="line">    eventlet.monkey_patch()</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> eventlet.Timeout(timeout_time):</span><br><span class="line">            print(<span class="string">'before'</span>)</span><br><span class="line">            time.sleep(<span class="number">4</span>)</span><br><span class="line">            print(<span class="string">'after'</span>)</span><br><span class="line">    <span class="keyword">except</span> eventlet.timeout.Timeout:</span><br><span class="line">        print(<span class="string">'function run timeout'</span>)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'function end'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">test_timeout(<span class="number">3</span>)</span><br></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">before</span><br><span class="line">function run timeout</span><br><span class="line">function end</span><br></pre></td></tr></table></figure><h2 id="引入func-timeout"><a class="markdownIt-Anchor" href="#引入func-timeout"></a> 引入func-timeout</h2><p>先安装func-timeout</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install func-timeout</span><br></pre></td></tr></table></figure><p>例子如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> func_timeout <span class="keyword">import</span> func_set_timeout, FunctionTimedOut</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@func_set_timeout(3)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'before'</span>)</span><br><span class="line">    time.sleep(<span class="number">4</span>)</span><br><span class="line">    print(<span class="string">'after'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test_func_timeout</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        test()</span><br><span class="line">    <span class="keyword">except</span> FunctionTimedOut <span class="keyword">as</span> e:</span><br><span class="line">        print(<span class="string">'function timeout + msg = '</span>, e.msg)</span><br><span class="line">    print(<span class="string">'end'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">test_func_timeout()</span><br></pre></td></tr></table></figure><p>结果如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">before</span><br><span class="line">function timeout + msg =  Function test (args=()) (kwargs=&#123;&#125;) timed out after 3.000000 seconds.</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>其中需要在控制运行时间的函数上加上@func_set_timeout注解，并且在外层捕获异常。<br />该库的GitHub地址为：<br /><a href="https://github.com/kata198/func_timeout" target="_blank" rel="noopener">https://github.com/kata198/func_timeout</a></p><h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1><ul><li>引入eventlet可以在某个代码片段设置超时时间，而func-timeout必须在某个函数上去加注解设置超时时间</li><li>两个都可以简单的解决。不涉及并发场景的运行超时问题</li></ul>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分布式ID算法snowflake(Java版)详解</title>
      <link href="/posts/802469613/"/>
      <url>/posts/802469613/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>snowflake算法是Twitter技术团队在2010年开源的分布式ID的生成算法，后续美团和百度都相应的根据该算法进行了改进，并且开源了其分布式ID生成算法。本文将详细介绍snowflake算法的数据结构以及其工作原理</p><a id="more"></a><h1 id="数据结构"><a class="markdownIt-Anchor" href="#数据结构"></a> 数据结构</h1><p>snowflake算法生成的分布式ID是一个一个64bit大小的整数，其结构如下：<br /><img src="https://tencentoss.zhanghanlun.com/blog/2020/03/2020_330111998.jpg" alt="snowflake数据结构" /></p><ul><li>1位，占位符不用，我们知道一般第一位表示正负数的符号，所以固定位为0</li><li>41位，用来记录时间的时间戳（毫秒）<br />41位可以表示的最大的数字为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mn>41</mn></msup></mrow><annotation encoding="application/x-tex">2^{41}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>,其可以使用的最长的时间为<br /><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mn>41</mn></msup><mo>÷</mo><mo stretchy="false">(</mo><mn>1000</mn><mo>×</mo><mn>60</mn><mo>×</mo><mn>60</mn><mo>×</mo><mn>24</mn><mo>×</mo><mn>356</mn><mo stretchy="false">)</mo><mo>=</mo><mn>71</mn></mrow><annotation encoding="application/x-tex">2^{41}\div(1000\times60\times60\times24\times356)=71</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">÷</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">6</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">6</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">3</span><span class="mord">5</span><span class="mord">6</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">7</span><span class="mord">1</span></span></span></span>年</li><li>10位，工作机器ID，可以部署在<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mn>10</mn></msup><mo>=</mo><mn>1024</mn></mrow><annotation encoding="application/x-tex">2^{10}=1024</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">2</span><span class="mord">4</span></span></span></span>个结点，其中5位为workerId，5位为datacenterId</li><li>12位，序列号，用来记录同毫秒内产生的ID，可以表示<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mn>12</mn></msup><mo>=</mo><mn>4096</mn></mrow><annotation encoding="application/x-tex">2^{12}=4096</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span><span class="mord">0</span><span class="mord">9</span><span class="mord">6</span></span></span></span>个序列号</li></ul><h1 id="代码详解"><a class="markdownIt-Anchor" href="#代码详解"></a> 代码详解</h1><p>Twitter的官方是用Scala写的，在这里我改成了Java版</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> 数组;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IdWorker</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//worker ID</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> workerId;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 数据中心ID</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> datacenterId;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 系统起始时间</span></span><br><span class="line"><span class="comment">     * 2010/11/4 9:42:54</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> twepoch = <span class="number">1288834974657L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * workerId位数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> workerIdBits = <span class="number">5L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * datacenter位数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> datacenterIdBits = <span class="number">5L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 最大的workerId 0x1f = 31</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> maxWorkerId = -<span class="number">1L</span> ^ (-<span class="number">1L</span> &lt;&lt; workerIdBits);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 最大的数据中心ID 0x1f = 31</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> maxDatacenterId = -<span class="number">1L</span> ^ (-<span class="number">1L</span> &lt;&lt; datacenterIdBits);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 序列位数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> sequenceBits = <span class="number">12L</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * workerId位移 12位</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> workerIdShift = sequenceBits;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * datacenter位移 17位</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> datacenterIdShift = sequenceBits + workerIdBits;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 时间位移 22位</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> timestampLeftShift = sequenceBits + workerIdBits + datacenterIdBits;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 序列掩码，便于求余</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> sequenceMask = -<span class="number">1L</span> ^ (-<span class="number">1L</span> &lt;&lt; sequenceBits);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> lastTimestamp = -<span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> sequence = <span class="number">0L</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">IdWorker</span><span class="params">(Long workerId, Long datacenterId)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (workerId &gt; maxWorkerId || workerId &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"worker Id can't be greater than %d or less than 0"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (datacenterId &gt; maxDatacenterId || datacenterId &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"datacenter Id can't be greater than %d or less than 0"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>.workerId = workerId;</span><br><span class="line">        <span class="keyword">this</span>.datacenterId = datacenterId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Long <span class="title">getWorkerId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> workerId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Long <span class="title">getDataCenterId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> datacenterId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Long <span class="title">getTimestamp</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> System.currentTimeMillis();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> Long <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取当前时间戳</span></span><br><span class="line">        Long timestamp = getTimeGen();</span><br><span class="line">        <span class="keyword">if</span> (timestamp &lt; lastTimestamp) &#123;</span><br><span class="line">            System.out.println(<span class="string">"error,clock is moving backwards.  Rejecting requests until "</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (lastTimestamp == timestamp) &#123;</span><br><span class="line">            sequence = (sequence + <span class="number">1</span>) &amp; sequenceMask;</span><br><span class="line">            <span class="keyword">if</span> (sequence == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="comment">//阻塞到下一个毫秒</span></span><br><span class="line">                timestamp = getNextMills(lastTimestamp);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            sequence = <span class="number">0L</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        lastTimestamp = timestamp;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//整合时间戳-数据中心ID-workerID-序列号</span></span><br><span class="line">        <span class="keyword">return</span> ((timestamp - twepoch) &lt;&lt; timestampLeftShift) |</span><br><span class="line">                (datacenterId &lt;&lt; datacenterIdShift) |</span><br><span class="line">                (workerId &lt;&lt; workerIdShift) |</span><br><span class="line">                sequence;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 阻塞到下一个毫秒</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> lastTimestamp</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> Long <span class="title">getNextMills</span><span class="params">(Long lastTimestamp)</span> </span>&#123;</span><br><span class="line">        Long timestamp = getTimeGen();</span><br><span class="line">        <span class="keyword">while</span> (timestamp &lt;= lastTimestamp) &#123;</span><br><span class="line">            timestamp = getTimeGen();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> timestamp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> Long <span class="title">getTimeGen</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> System.currentTimeMillis();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该算法的整体思路如下：</p><ol><li>获取ID的时候，先获取当前的时间戳，和上一个时间戳比较，如果小，则产生了时钟回拨，错误。</li><li>如果时间戳相等则序列号加1和序列号最大值求余，当序列号为0的时候则阻塞到下个毫秒</li><li>如果时间戳大于上一个时间戳，则序列号赋值为0</li><li>通过位运算生成分布式ID结果</li></ol>]]></content>
      
      
      <categories>
          
          <category> 分布式系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 分布式系统 </tag>
            
            <tag> 分布式ID </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo博客部署到服务器</title>
      <link href="/posts/16885314/"/>
      <url>/posts/16885314/</url>
      
        <content type="html"><![CDATA[<h1 id="安装git"><a class="markdownIt-Anchor" href="#安装git"></a> 安装git</h1><p>在Centos系统上安装git</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install git</span><br></pre></td></tr></table></figure><a id="more"></a><p>检测是否安装成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git --version</span></span><br><span class="line">git version 1.8.3.1</span><br></pre></td></tr></table></figure><p>添加git用户</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adduser git</span><br></pre></td></tr></table></figure><p>添加公钥</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">su git</span><br><span class="line">cd ~</span><br><span class="line">mkdir .ssh</span><br><span class="line">chmod 777 .ssh</span><br><span class="line">cd .ssh</span><br><span class="line">touch authorized_keys</span><br><span class="line">chmod 644 authorized_keys</span><br><span class="line">vim authorized_keys</span><br></pre></td></tr></table></figure><p>将公钥<strong>id_rsa.pub</strong>复制进去<br /><img src="https://tencentoss.zhanghanlun.com/blog/2020/04/2020_41112562.png" alt="在这里插入图片描述" /><br />禁止git用户使用ssh登陆</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;passwd</span><br></pre></td></tr></table></figure><p>修改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git:x:1000:1000::&#x2F;home&#x2F;git:&#x2F;bin&#x2F;sh</span><br></pre></td></tr></table></figure><p>为</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git:x:1000:1000::/home/git:/usr/bin/git-shell</span><br></pre></td></tr></table></figure><h1 id="配置git仓库"><a class="markdownIt-Anchor" href="#配置git仓库"></a> 配置git仓库</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir /var/repo</span><br><span class="line">cd /var/repo</span><br></pre></td></tr></table></figure><p>初始化git仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init --bare blog.git</span><br></pre></td></tr></table></figure><p>赋予git用户权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown -R git:git blog.git</span><br></pre></td></tr></table></figure><p>通过git hook将仓库的内容共享到*/data/www/zhanghanlun*目录,<br />在hook目录下添加post-receive文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /var/repo/blog.git/hooks/post-receive</span><br></pre></td></tr></table></figure><p>添加如下内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/sh</span></span><br><span class="line">git --work-tree=/data/www/zhanghanlun --git-dir=/var/repo/blog.git checkout -f</span><br></pre></td></tr></table></figure><p>赋予可执行权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x post-receive</span><br></pre></td></tr></table></figure><p>创建/data/www/zhanghanlun并改变该文件夹的用户为git</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir /data/www/zhanghanlun</span><br><span class="line">cd /data/www</span><br><span class="line">chown -R git:git zhanghanlun</span><br></pre></td></tr></table></figure><h1 id="配置nginx"><a class="markdownIt-Anchor" href="#配置nginx"></a> 配置nginx</h1><p>nginx配置文件如下：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">server</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line"><span class="attribute">listen</span> <span class="number">443</span> ssl http2;</span><br><span class="line">    <span class="attribute">server_name</span> www.zhanghanlun.com;</span><br><span class="line">    <span class="attribute">index</span> index.php index.html index.htm default.php default.htm default.html;</span><br><span class="line">    <span class="attribute">root</span> /www/wwwroot/www.zhanghanlun.com;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#SSL-START SSL相关配置，请勿删除或修改下一行带注释的404规则</span></span><br><span class="line">    <span class="comment">#error_page 404/404.html;</span></span><br><span class="line">    <span class="comment">#HTTP_TO_HTTPS_START</span></span><br><span class="line">    <span class="attribute">if</span> (<span class="variable">$server_port</span> !<span class="regexp">~ 443)</span>&#123;</span><br><span class="line">        <span class="attribute">rewrite</span><span class="regexp"> ^(/.*)$</span> https://<span class="variable">$host</span><span class="variable">$1</span> <span class="literal">permanent</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">#HTTP_TO_HTTPS_END</span></span><br><span class="line">    <span class="attribute">ssl_certificate</span>    /www/server/panel/vhost/cert/www.zhanghanlun.com/fullchain.pem;</span><br><span class="line">    <span class="attribute">ssl_certificate_key</span>    /www/server/panel/vhost/cert/www.zhanghanlun.com/privkey.pem;</span><br><span class="line">    <span class="attribute">ssl_protocols</span> TLSv1.<span class="number">1</span> TLSv1.<span class="number">2</span> TLSv1.<span class="number">3</span>;</span><br><span class="line">    <span class="attribute">ssl_ciphers</span> ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;</span><br><span class="line">    <span class="attribute">ssl_prefer_server_ciphers</span> <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">ssl_session_cache</span> shared:SSL:<span class="number">10m</span>;</span><br><span class="line">    <span class="attribute">ssl_session_timeout</span> <span class="number">10m</span>;</span><br><span class="line">    <span class="attribute">error_page</span> <span class="number">497</span>  https://<span class="variable">$host</span><span class="variable">$request_uri</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#SSL-END</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">#ERROR-PAGE-START  错误页配置，可以注释、删除或修改</span></span><br><span class="line">    <span class="comment">#error_page 404 /404.html;</span></span><br><span class="line">    <span class="comment">#error_page 502 /502.html;</span></span><br><span class="line">    <span class="comment">#ERROR-PAGE-END</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">#PHP-INFO-START  PHP引用配置，可以注释或修改</span></span><br><span class="line">    <span class="attribute">include</span> enable-php-<span class="number">56</span>.conf;</span><br><span class="line">    <span class="comment">#PHP-INFO-END</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">#REWRITE-START URL重写规则引用,修改后将导致面板设置的伪静态规则失效</span></span><br><span class="line">    <span class="attribute">include</span> /www/server/panel/vhost/rewrite/www.zhanghanlun.com.conf;</span><br><span class="line">    <span class="comment">#REWRITE-END</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">#禁止访问的文件或目录</span></span><br><span class="line">    <span class="attribute">location</span> <span class="regexp">~ ^/(\.user.ini|\.htaccess|\.git|\.svn|\.project|LICENSE|README.md)</span></span><br><span class="line"><span class="regexp"></span>    &#123;</span><br><span class="line">        <span class="attribute">return</span> <span class="number">404</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#一键申请SSL证书验证目录相关设置</span></span><br><span class="line">    <span class="attribute">location</span> <span class="regexp">~ \.well-known</span>&#123;</span><br><span class="line">        <span class="attribute">allow</span> all;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="attribute">location</span> <span class="regexp">~ .*\.(gif|jpg|jpeg|png|bmp|swf)$</span></span><br><span class="line"><span class="regexp"></span>    &#123;</span><br><span class="line">        <span class="attribute">expires</span>      <span class="number">30d</span>;</span><br><span class="line">        <span class="attribute">error_log</span> <span class="literal">off</span>;</span><br><span class="line">        <span class="attribute">access_log</span> /dev/null;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="attribute">location</span> <span class="regexp">~ .*\.(js|css)?$</span></span><br><span class="line"><span class="regexp"></span>    &#123;</span><br><span class="line">        <span class="attribute">expires</span>      <span class="number">12h</span>;</span><br><span class="line">        <span class="attribute">error_log</span> <span class="literal">off</span>;</span><br><span class="line">        <span class="attribute">access_log</span> /dev/null; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="attribute">access_log</span>  /www/wwwlogs/www.zhanghanlun.com.log;</span><br><span class="line">    <span class="attribute">error_log</span>  /www/wwwlogs/www.zhanghanlun.com.<span class="literal">error</span>.log;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="修改hexo配置文件"><a class="markdownIt-Anchor" href="#修改hexo配置文件"></a> 修改hexo配置文件</h1><p>修改_config.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">   <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">   <span class="attr">repo:</span> <span class="string">git@IP:/var/repo/blog.git</span></span><br><span class="line">   <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring解决CORS问题</title>
      <link href="/posts/241123514/"/>
      <url>/posts/241123514/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>出于安全原因，浏览器禁止AJAX调用当前来源之外的资源，跨域资源共享（CORS）是由大多数浏览器实施的W3C规范，使您可以灵活地指定对哪种跨域请求进行授权。</p><a id="more"></a><p>从Spring Framework 4.2开始，开箱即用地支持CORS。 CORS请求（包括带有OPTIONS方法的预检请求）将自动分派到各种已注册的HandlerMappings。</p><h1 id="controller方法的cors配置"><a class="markdownIt-Anchor" href="#controller方法的cors配置"></a> Controller方法的CORS配置</h1><ul><li>可以在方法上加上**@CrossOrigin**注解</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/account"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@CrossOrigin</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/&#123;id&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> Account <span class="title">retrieve</span><span class="params">(@PathVariable Long id)</span> </span>&#123;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping</span>(method = RequestMethod.DELETE, path = <span class="string">"/&#123;id&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">remove</span><span class="params">(@PathVariable Long id)</span> </span>&#123;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>也可以在Controller上进行全局配置</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@CrossOrigin</span>(origins = <span class="string">"http://domain2.com"</span>, maxAge = <span class="number">3600</span>)</span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/account"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/&#123;id&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> Account <span class="title">retrieve</span><span class="params">(@PathVariable Long id)</span> </span>&#123;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping</span>(method = RequestMethod.DELETE, path = <span class="string">"/&#123;id&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">remove</span><span class="params">(@PathVariable Long id)</span> </span>&#123;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>同时也可以使用Controller级别和方法级别的注解</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@CrossOrigin</span>(maxAge = <span class="number">3600</span>)</span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/account"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@CrossOrigin</span>(<span class="string">"http://domain2.com"</span>)</span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/&#123;id&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> Account <span class="title">retrieve</span><span class="params">(@PathVariable Long id)</span> </span>&#123;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping</span>(method = RequestMethod.DELETE, path = <span class="string">"/&#123;id&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">remove</span><span class="params">(@PathVariable Long id)</span> </span>&#123;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="全局配置"><a class="markdownIt-Anchor" href="#全局配置"></a> 全局配置</h1><h2 id="java类配置"><a class="markdownIt-Anchor" href="#java类配置"></a> Java类配置</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableWebMvc</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebConfig</span> <span class="keyword">extends</span> <span class="title">WebMvcConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addCorsMappings</span><span class="params">(CorsRegistry registry)</span> </span>&#123;</span><br><span class="line">registry.addMapping(<span class="string">"/api/**"</span>)</span><br><span class="line">.allowedOrigins(<span class="string">"http://domain2.com"</span>)</span><br><span class="line">.allowedMethods(<span class="string">"PUT"</span>, <span class="string">"DELETE"</span>)</span><br><span class="line">.allowedHeaders(<span class="string">"header1"</span>, <span class="string">"header2"</span>, <span class="string">"header3"</span>)</span><br><span class="line">.exposedHeaders(<span class="string">"header1"</span>, <span class="string">"header2"</span>)</span><br><span class="line">.allowCredentials(<span class="keyword">false</span>).maxAge(<span class="number">3600</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="xml配置文件配置"><a class="markdownIt-Anchor" href="#xml配置文件配置"></a> xml配置文件配置</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mvc:cors</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:mapping</span> <span class="attr">path</span>=<span class="string">"/api/**"</span></span></span><br><span class="line"><span class="tag"><span class="attr">allowed-origins</span>=<span class="string">"http://domain1.com, http://domain2.com"</span></span></span><br><span class="line"><span class="tag"><span class="attr">allowed-methods</span>=<span class="string">"GET, PUT"</span></span></span><br><span class="line"><span class="tag"><span class="attr">allowed-headers</span>=<span class="string">"header1, header2, header3"</span></span></span><br><span class="line"><span class="tag"><span class="attr">exposed-headers</span>=<span class="string">"header1, header2"</span> <span class="attr">allow-credentials</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag"><span class="attr">max-age</span>=<span class="string">"123"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:mapping</span> <span class="attr">path</span>=<span class="string">"/resources/**"</span></span></span><br><span class="line"><span class="tag"><span class="attr">allowed-origins</span>=<span class="string">"http://domain1.com"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:cors</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="filter配置支持cors"><a class="markdownIt-Anchor" href="#filter配置支持cors"></a> Filter配置支持CORS</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.web.cors.CorsConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.cors.UrlBasedCorsConfigurationSource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.filter.CorsFilter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyCorsFilter</span> <span class="keyword">extends</span> <span class="title">CorsFilter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">MyCorsFilter</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>(configurationSource());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> UrlBasedCorsConfigurationSource <span class="title">configurationSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">CorsConfiguration config = <span class="keyword">new</span> CorsConfiguration();</span><br><span class="line">config.setAllowCredentials(<span class="keyword">true</span>);</span><br><span class="line">config.addAllowedOrigin(<span class="string">"http://domain1.com"</span>);</span><br><span class="line">config.addAllowedHeader(<span class="string">"*"</span>);</span><br><span class="line">config.addAllowedMethod(<span class="string">"*"</span>);</span><br><span class="line">UrlBasedCorsConfigurationSource source = <span class="keyword">new</span> UrlBasedCorsConfigurationSource();</span><br><span class="line">source.registerCorsConfiguration(<span class="string">"/**"</span>, config);</span><br><span class="line"><span class="keyword">return</span> source;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Spring </tag>
            
            <tag> CORS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux安装Java8</title>
      <link href="/posts/1161758996/"/>
      <url>/posts/1161758996/</url>
      
        <content type="html"><![CDATA[<h1 id="下载java8-targz包"><a class="markdownIt-Anchor" href="#下载java8-targz包"></a> 下载Java8 tar.gz包</h1><p>上<a href="https://www.oracle.com/java/technologies/javase-jdk8-downloads.html" target="_blank" rel="noopener">Java官网</a></p><a id="more"></a><p><img src="https://tencentoss.zhanghanlun.com/blog/2020/03/2020_311114456.jpg" alt="在这里插入图片描述" /><br />下载Java压缩包</p><h1 id="解压并配置路径"><a class="markdownIt-Anchor" href="#解压并配置路径"></a> 解压并配置路径</h1><p>创建目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /usr/local/java</span><br></pre></td></tr></table></figure><p>解压到目标文件夹</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -vzxf jdk-8u241-linux-x64.tar.gz -C &#x2F;usr&#x2F;local&#x2F;java&#x2F;</span><br></pre></td></tr></table></figure><h1 id="添加环境变量"><a class="markdownIt-Anchor" href="#添加环境变量"></a> 添加环境变量</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure><p>添加入下内容，并保存</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/usr/local/java/jdk1.8.0_241</span><br><span class="line">export CLASSPATH=$:CLASSPATH:$JAVA_HOME/lib/</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin</span><br></pre></td></tr></table></figure><p>重新加载配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure><h1 id="测试"><a class="markdownIt-Anchor" href="#测试"></a> 测试</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@izj6c37yicmwutvw4fvvzxz ~]# java -version</span><br><span class="line">java version "1.8.0_121"</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_121-b13)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.121-b13, mixed mode)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>加密算法总结</title>
      <link href="/posts/1205320367/"/>
      <url>/posts/1205320367/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>本文主要总结了常用的一些加密算法，对称加密算法和非对称加密算法以及数字签名</p><a id="more"></a><h1 id="对称加密和非对称加密"><a class="markdownIt-Anchor" href="#对称加密和非对称加密"></a> 对称加密和非对称加密</h1><ul><li><p>对称加密算法：该算法又称为私钥加密、共享密钥加密。主要是加密和解密都用同一个密钥进行。一旦密钥落入别人的手中，该算法就被破解了。主要的加密算法有DES算法、Blowfish算法、RC5算法和IDEA算法。其示例如图所示,<br /><img src="https://tencentoss.zhanghanlun.com/blog/2020/03/2957818672.jpg" alt="encrypt-symmetric-key.jpg" /></p></li><li><p>非对称加密算法：该算法又叫公开密钥加密算法。该算法需要两个密钥，一个公钥，一个私钥。<strong>公钥用做加密，私钥用做解密</strong>。使用公钥加密后得到的密文，只有相对应的私钥才能解密得到原来的明文。公钥可以公开，可任意向外发布；私钥不可以公开，必须由用户自行严格秘密保管，绝不透过任何途径向任何人提供，也不会透露给被信任的要通信的另一方。如果任何人使用公钥加密明文，得到的密文可以透过不安全的途径（如网络）发送，只有对应的私钥持有者才可以解密得到明文；其他人即使从网络上窃取到密文及加密公钥，也无法（在数以年计的合理时间内）解密得出明文。常见的算法有RSA算法等。其示例如图所示：<br /><img src="https://tencentoss.zhanghanlun.com/blog/2020/03/3394823393.jpg" alt="encrypt-asymmetric-encryption.jpg" /></p></li></ul><h1 id="数字签名"><a class="markdownIt-Anchor" href="#数字签名"></a> 数字签名</h1><p>通常我们使用公钥加密，用私钥解密。而在数字签名中，我们使用私钥加密（相当于生成签名），公钥解密（相当于验证签名）。签名方法：我们可以直接对消息进行签名（即使用私钥加密，此时加密的目的是为了签名，而不是保密），验证者用公钥正确解密消息，如果和原消息一致，则验证签名成功。但通常我们会对消息的散列值签名，因为通常散列值的长度远小于消息原文，使得签名（非对称加密）的效率大大提高。注意，计算消息的散列值不是数字签名的必要步骤。<br /><img src="https://tencentoss.zhanghanlun.com/blog/2020/03/1536604835.jpg" alt="数字签名.jpg" /></p><h1 id="常见算法"><a class="markdownIt-Anchor" href="#常见算法"></a> 常见算法</h1><h2 id="md5摘要算法"><a class="markdownIt-Anchor" href="#md5摘要算法"></a> MD5摘要算法</h2><p>一种被广泛使用的密码散列函数，可以产生出一个128位（16字节）的散列值。是不可逆的算法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用apache的DigestUtils类来计算MD5</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getMD5</span><span class="params">(String str)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> DigestUtils.md5Hex(str.getBytes());</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="sha算法"><a class="markdownIt-Anchor" href="#sha算法"></a> SHA算法</h2><p>和MD5算法类似，SHA算法也是一种信息摘要算法，又名安全散列算法（Secure Hash Algorithm）。SHA家族的五个算法，分别是SHA-1、SHA-224、SHA-256、SHA-384，和SHA-512。其Java实现如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.commons.codec.digest.DigestUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DigestService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getSHA1</span><span class="params">(String str)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> DigestUtils.sha1Hex(str);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getSHA256</span><span class="params">(String str)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> DigestUtils.sha256Hex(str);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getSHA384</span><span class="params">(String str)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> DigestUtils.sha384Hex(str);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getSHA512</span><span class="params">(String str)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> DigestUtils.sha512Hex(str);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 加密算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTTP状态码详解</title>
      <link href="/posts/5b96dd15/"/>
      <url>/posts/5b96dd15/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>我们在访问网页的时候，服务器会返回 HTTP 状态代码以响应该请求，在这里给常用的状态码进行详解。</p><a id="more"></a><h1 id="状态码详解"><a class="markdownIt-Anchor" href="#状态码详解"></a> 状态码详解</h1><blockquote><ul><li>1xx（临时响应）</li><li>2xx（成功）</li><li>3xx（重定向）</li><li>4xx（请求错误）</li><li>5xx（服务器错误）</li></ul></blockquote><h2 id="1xx临时响应"><a class="markdownIt-Anchor" href="#1xx临时响应"></a> 1xx（临时响应）</h2><table><thead><tr><th>状态码</th><th>说明</th></tr></thead><tbody><tr><td>100（继续）</td><td>请求者应继续进行请求。服务器返回此代码以表示，服务器已收到某项请求的第一部分，正等待接收剩余部分。</td></tr><tr><td>101（切换协议）</td><td>请求者已要求服务器切换协议，服务器已确认并准备进行切换。</td></tr></tbody></table><h2 id="2xx成功"><a class="markdownIt-Anchor" href="#2xx成功"></a> 2xx（成功）</h2><table><thead><tr><th>状态码</th><th>说明</th></tr></thead><tbody><tr><td><strong>200（成功</strong>）</td><td><strong>说明服务器成功处理了相应请求。通常，这表示服务器已提供了请求的网页。如果您的 robots.txt 文件显示为此状态，则表示 检测工具 已成功检索到该文件。</strong></td></tr><tr><td>201（已创建）</td><td>请求成功且服务器已创建了新的资源。</td></tr><tr><td>202（已接受）</td><td>服务器已接受相应请求，但尚未对其进行处理。</td></tr><tr><td>203（非授权信息）</td><td>服务器已成功处理相应请求，但返回了可能来自另一来源的信息。</td></tr><tr><td>204（无内容）</td><td>服务器已成功处理相应请求，但未返回任何内容。</td></tr><tr><td>205（重置内容）</td><td>服务器已成功处理相应请求，但未返回任何内容。与 204 响应不同，此响应要求请求者重置文档视图（例如清除表单内容以输入新内容）。</td></tr><tr><td>206（部分内容)</td><td>服务器成功处理了部分 GET 请求。</td></tr></tbody></table><h2 id="3xx重定向"><a class="markdownIt-Anchor" href="#3xx重定向"></a> 3xx（重定向）</h2><table><thead><tr><th>状态码</th><th>说明</th></tr></thead><tbody><tr><td>300（多种选择）</td><td>服务器可以根据请求来执行多项操作，例如：按照请求者（用户代理）的要求来选择某项操作或者展示列表以便请求者选择其中某项操作。</td></tr><tr><td>301（永久移动）</td><td>请求的网页已永久移动到新位置。服务器返回此响应（作为对 GET 或 HEAD 请求的响应）时，会自动将请求者转到新位置。您应使用此代码通知 检测工具 某个网页或网站已被永久移动到新位置</td></tr><tr><td>302（临时移动）</td><td>服务器目前正从不同位置的网页响应请求，但请求者应继续使用原有位置来进行以后的请求。此代码与响应 GET 和 HEAD 请求的 301 代码类似，会自动将请求者转到不同的位置。但由于 检测工具 会继续抓取原有位置并将其编入索引，因此您不应使用此代码来通知 检测工具 某个页面或网站已被移动。</td></tr><tr><td>303（查看其他位置）</td><td>当请求者应对不同的位置进行单独的 GET 请求以检索响应时，服务器会返回此代码。对于除 HEAD 请求之外的所有请求，服务器会自动转到其他位置</td></tr><tr><td>304（未修改）</td><td>请求的网页自上次请求后再也没有修改过。当服务器返回此响应时，不会返回相关网页的内容。如果网页自请求者上次请求后再也没有更改过，您应当将服务器配置为返回此响应（称为 If-Modified-Since HTTP 标头）。服务器可以告诉 检测工具 自从上次抓取后网页没有变更，进而节省带宽和开销。</td></tr><tr><td>305（使用代理）</td><td>请求者只能使用代理访问请求的网页。如果服务器返回此响应，那么，服务器还会指明请求者应当使用的代理。</td></tr><tr><td>307（临时重定向）</td><td>服务器目前正从不同位置的网页响应请求，但请求者应继续使用原有位置来进行以后的请求。此代码与响应 GET 和 HEAD 请求的 301 代码类似，会自动将请求者转到不同的位置。但由于 检测工具 会继续抓取原有位置并将其编入索引，因此您不应使用此代码来通知 检测工具 某个页面或网站已被移动。</td></tr></tbody></table><h2 id="4xx请求错误"><a class="markdownIt-Anchor" href="#4xx请求错误"></a> 4xx（请求错误）</h2><table><thead><tr><th>状态码</th><th>说明</th></tr></thead><tbody><tr><td>400（错误请求）</td><td>服务器不理解相应请求的语法。</td></tr><tr><td>401（未授权）</td><td>请求要求进行身份验证。登录后，服务器可能会返回对页面的此响应。</td></tr><tr><td>403（已禁止）</td><td>服务器正在拒绝相应请求。如果 检测工具 在尝试抓取网站的有效网页时收到此状态代码（您可在网站站长工具中运行工具下的抓取错误页上进行查看），则可能是因为您的服务器或主机正在阻止 检测工具 进行访问。</td></tr><tr><td>404（未找到）</td><td>服务器找不到请求的网页。例如，如果相应请求是针对服务器上不存在的网页进行的，那么服务器通常会返回此代码。如果您的网站上没有 robots.txt 文件，而您在  网站站长工具中的已拦截的网址页上看到此状态，那么这就是正确的状态。然而，如果您有 robots.txt 文件而又发现了此状态，那么，这说明您的 robots.txt 文件可能是命名错误或位于错误的位置。（该文件应当位于顶级域名上，且应当名为 robots.txt）。</td></tr><tr><td>405（方法禁用）</td><td>禁用相应请求中所指定的方法。</td></tr><tr><td>406（不接受）</td><td>无法使用相应请求的内容特性来响应请求的网页。</td></tr><tr><td>407（需要代理授权）</td><td>此状态代码与 401（未授权）类似，但却指定了请求者应当使用代理进行授权。如果服务器返回此响应，那么，服务器还会指明请求者应当使用的代理。</td></tr><tr><td>408（请求超时）</td><td>服务器在等待请求时超时。</td></tr><tr><td>409（冲突）</td><td>服务器在完成请求时遇到冲突。服务器必须在响应中包含该冲突的相关信息。服务器在响应与前一个请求相冲突的 PUT 请求时可能会返回此代码，同时会提供两个请求的差异列表。</td></tr><tr><td>410（已删除）</td><td>如果请求的资源已被永久删除，那么服务器会返回此响应。该代码与 404（未找到）代码类似，但在资源以前有但现在已经不复存在的情况下，有时会替代 404 代码出现。如果资源已永久删除，您应使用 301 指定资源的新位置。</td></tr><tr><td>411（需要有效长度）</td><td>服务器不会接受包含无效内容长度标头字段的请求。</td></tr><tr><td>412（未满足前提条件）</td><td>服务器未满足请求者在请求中设置的其中一个前提条件。</td></tr><tr><td>413（请求实体过大）</td><td>服务器无法处理相应请求，因为请求实体过大，已超出服务器的处理能力。</td></tr><tr><td>414（请求的 URI 过长）</td><td>请求的 URI（通常为网址）过长，服务器无法进行处理。</td></tr><tr><td>415（不支持的媒体类型）</td><td>相应请求的格式不受请求页面的支持。</td></tr><tr><td>416（请求范围不符合要求）</td><td>如果相应请求是针对网页的无效范围进行的，那么服务器会返回此状态代码。</td></tr><tr><td>417（未满足期望值）</td><td>服务器未满足“期望”请求标头字段的要求。</td></tr></tbody></table><h2 id="5xx服务器错误"><a class="markdownIt-Anchor" href="#5xx服务器错误"></a> 5xx（服务器错误）</h2><table><thead><tr><th>状态码</th><th>说明</th></tr></thead><tbody><tr><td>500（服务器内部错误）</td><td>服务器遇到错误，无法完成相应请求。</td></tr><tr><td>501（尚未实施）</td><td>服务器不具备完成相应请求的功能。例如，当服务器无法识别请求方法时，可能便会返回此代码</td></tr><tr><td>502（错误网关）</td><td>服务器作为网关或代理，从上游服务器收到了无效的响应。</td></tr><tr><td>503（服务不可用）</td><td>目前无法使用服务器（由于超载或进行停机维护）。通常，这只是暂时状态。</td></tr><tr><td>504（网关超时）</td><td>服务器作为网关或代理，未及时从上游服务器接收请求。</td></tr><tr><td>505（HTTP 版本不受支持）</td><td>服务器不支持相应请求中所用的 HTTP 协议版本。</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
            <tag> HTTP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分布式系统限流方案</title>
      <link href="/posts/1468ce12/"/>
      <url>/posts/1468ce12/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>对于分布式系统而言，常常有很多高并发场景需要我们去处理，比如秒杀等等场景，而这些场景需要对某些接口进行限流然后进行操作。</p><a id="more"></a><h1 id="限流算法"><a class="markdownIt-Anchor" href="#限流算法"></a> 限流算法</h1><p>目前来说常用的三种限流算法如下所示：</p><blockquote><ul><li>计数器法</li><li>漏桶法</li><li>令牌桶法</li></ul></blockquote><h2 id="计数器法"><a class="markdownIt-Anchor" href="#计数器法"></a> 计数器法</h2><p>计数器法通常用来限制每秒的请求的数量，是最简单的限流算法。具体的思路如下：</p><ul><li>为每秒的请求设置一个阈值</li><li>请求过来的时候，判断该秒的请求数量是否大于等于阈值，如果大于等于阈值，则对该请求返回特定的返回码，否则该秒的请求数量加一，处理该请求，并正常返回。</li></ul><h2 id="漏桶算法"><a class="markdownIt-Anchor" href="#漏桶算法"></a> 漏桶算法</h2><p>如图所示：<br /><img src="https://tencentoss.zhanghanlun.com/blog/2020/03/1521000115.png" alt="漏桶算法图解" /></p><ul><li>在该模型中有几个参数需要注意，桶的容量B，流出速率R，初始容量F。</li><li>水（请求）先流入桶（缓存）中，当桶中的水满了的时候，则多余的水会溢出（拒绝请求）。</li><li>系统根据流出速率来处理请求。</li></ul><h2 id="令牌桶算法"><a class="markdownIt-Anchor" href="#令牌桶算法"></a> 令牌桶算法</h2><p>如图所示：<br /><img src="https://tencentoss.zhanghanlun.com/blog/2020/03/1957153385.jpg" width="60%" height="60%"></p><ul><li>系统会按恒定的速率往令牌桶中添加令牌，当令牌桶满了的时候，则不接受令牌</li><li>当有请求过来的时候，先从令牌桶中取令牌，如果取不到令牌，则拒绝该请求，当取到令牌后，则处理该请求。</li></ul><p>关于该算法的实现，则Google的Guava中的RateLimiter类实现了该算法，我们使用该类很容易写出一个简单的限流操作。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.google.common.util.concurrent.RateLimiter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.util.concurrent.TimeUnit.SECONDS;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RateLimiterExample</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> RateLimiter rateLimiter = RateLimiter.create(<span class="number">2</span>d);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//获取令牌，等待时间为1s</span></span><br><span class="line">        <span class="keyword">boolean</span> flag = rateLimiter.tryAcquire(<span class="number">1</span>,<span class="number">1</span>,SECONDS);</span><br><span class="line">        <span class="keyword">if</span> (flag)&#123;</span><br><span class="line">            System.out.println(<span class="string">"处理 "</span>+<span class="keyword">new</span> Date());</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"舍弃"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        RateLimiterExample example = <span class="keyword">new</span> RateLimiterExample();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">            example.test();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">处理 Wed Feb 19 11:50:40 CST 2020</span><br><span class="line">处理 Wed Feb 19 11:50:41 CST 2020</span><br><span class="line">处理 Wed Feb 19 11:50:41 CST 2020</span><br><span class="line">处理 Wed Feb 19 11:50:42 CST 2020</span><br><span class="line">处理 Wed Feb 19 11:50:42 CST 2020</span><br><span class="line">处理 Wed Feb 19 11:50:43 CST 2020</span><br><span class="line">处理 Wed Feb 19 11:50:43 CST 2020</span><br><span class="line">处理 Wed Feb 19 11:50:44 CST 2020</span><br><span class="line">处理 Wed Feb 19 11:50:44 CST 2020</span><br><span class="line">处理 Wed Feb 19 11:50:45 CST 2020</span><br></pre></td></tr></table></figure><h1 id="分布式限流实现计数器法"><a class="markdownIt-Anchor" href="#分布式限流实现计数器法"></a> 分布式限流实现（计数器法）</h1><p>使用Redis和Lua脚本配合来实现，其架构图如下：<br /><img src="https://tencentoss.zhanghanlun.com/blog/2020/03/1873778778.png" alt="artech.png" /></p><ul><li>用户请求服务器执行下载操作，大量的请求将分发到服务器集群中的服务器执行。</li><li>Redis服务器判断是否达到每秒的下载量阈值，如果达到拒绝下载，没有达到则正常下载。Redis服务器判断是否达到阈值是在Redis上执行lua脚本来判断。</li><li>在Redis 2.6版本之后，内置了Lua解释器，可以通过lua脚本中的函数执行Redis命令。Redis使用单个Lua解释器去运行所有脚本，并且Redis会保证脚本以原子性的运行，当某个脚本在运行的时候，不会有其他脚本或Redis命令被执行。</li></ul><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">local</span> key = KEYS[<span class="number">1</span>]</span><br><span class="line"><span class="keyword">local</span> limit = <span class="built_in">tonumber</span>(ARGV[<span class="number">1</span>])</span><br><span class="line"><span class="keyword">local</span> current = <span class="built_in">tonumber</span>(redis.call(<span class="string">'get'</span>,key) <span class="keyword">or</span> <span class="string">"0"</span>)</span><br><span class="line"><span class="keyword">if</span> current + <span class="number">1</span> &gt; limit <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    redis.call(<span class="string">"incrby"</span>,key,<span class="string">"1"</span>)</span><br><span class="line">    redis.call(<span class="string">"expire"</span>,key,<span class="string">"2"</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><p>Lua脚本的思路如下：<br />每次以秒作为key值，每进来一个请求，判断其value的值加一是否大于阈值，大于阈值返回0，小于阈值则让其value值加一，并且设置其过期时间为2秒。</p><p>Java代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isLimited</span><span class="params">(Long limitNum)</span> </span>&#123;</span><br><span class="line">List&lt;String&gt; keys = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    String key = String.valueOf(System.currentTimeMillis() / <span class="number">1000</span>);</span><br><span class="line">    keys.add(key);</span><br><span class="line">    Long result = redisTemplate.execute(redisScript, keys, limitNum);</span><br><span class="line">    <span class="keyword">if</span> (result != <span class="keyword">null</span> &amp;&amp; result &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 分布式系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 分布式系统 </tag>
            
            <tag> 限流 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python读写Excel</title>
      <link href="/posts/672d4844/"/>
      <url>/posts/672d4844/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>我们经常使用Python来读写Excel文件，该怎么做呢，本篇文章为大家介绍一下如何使用Python进行Excel文件的读写。</p><a id="more"></a><h1 id="引入excel读写包"><a class="markdownIt-Anchor" href="#引入excel读写包"></a> 引入Excel读写包</h1><p>安装xlrd和xlwt包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> pip install xlrd</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pip install xlwt</span></span><br></pre></td></tr></table></figure><p>然后在Python程序中引用这两个包</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 读Excel</span></span><br><span class="line"><span class="keyword">import</span> xlrd</span><br><span class="line"><span class="comment"># 写Excel</span></span><br><span class="line"><span class="keyword">import</span> xlwt</span><br></pre></td></tr></table></figure><h1 id="读excel文件"><a class="markdownIt-Anchor" href="#读excel文件"></a> 读Excel文件</h1><p>Excel文件如图所示：<br /><img src="https://tencentoss.zhanghanlun.com/blog/2020/03/3607207475.png" alt="20200216160447216.png" /></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_excel</span><span class="params">(path)</span>:</span></span><br><span class="line">    workbook = xlrd.open_workbook(path)</span><br><span class="line">    <span class="comment"># 打开工作表</span></span><br><span class="line">    sheet = workbook.sheet_by_index(<span class="number">0</span>)</span><br><span class="line">    <span class="comment"># 获取Excel文件的行数</span></span><br><span class="line">    row_count = sheet.nrows</span><br><span class="line">    <span class="comment"># 循环遍历每行</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,row_count):</span><br><span class="line">        <span class="comment"># 获取每行的内容</span></span><br><span class="line">        rows = sheet.row_values(i)</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,len(rows)):</span><br><span class="line">            <span class="keyword">if</span> j != len(rows)<span class="number">-1</span>:</span><br><span class="line">                print(rows[j],end=<span class="string">""</span>)</span><br><span class="line">                print(<span class="string">" "</span>,end=<span class="string">""</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(rows[j])</span><br><span class="line"></span><br><span class="line">read_excel(<span class="string">"E:\\example.xlsx"</span>)</span><br></pre></td></tr></table></figure><p>读Excel的结果为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">姓名 年龄 工作</span><br><span class="line">张函仑 25.0 程序员</span><br><span class="line">李四 29.0 教师</span><br></pre></td></tr></table></figure><h1 id="写excel文件"><a class="markdownIt-Anchor" href="#写excel文件"></a> 写Excel文件</h1><p>xlwt模块只支持书写xls文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write_excel</span><span class="params">(path)</span>:</span></span><br><span class="line">    <span class="comment"># 创建一个workbook</span></span><br><span class="line">    workbook = xlwt.Workbook(encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">    <span class="comment"># 创建一个worksheet</span></span><br><span class="line">    sheet1 = workbook.add_sheet(<span class="string">'sheet1'</span>, cell_overwrite_ok=<span class="literal">True</span>)</span><br><span class="line">    sheet1.write(<span class="number">3</span>,<span class="number">0</span>,<span class="string">"张三"</span>)</span><br><span class="line">    sheet1.write(<span class="number">3</span>,<span class="number">1</span>,<span class="number">22</span>)</span><br><span class="line">    sheet1.write(<span class="number">3</span>,<span class="number">2</span>,<span class="string">"运营"</span>)</span><br><span class="line">    workbook.save(path)</span><br></pre></td></tr></table></figure><p>运行后的结果如下图所示<br /><img src="https://tencentoss.zhanghanlun.com/blog/2020/03/3158387079.png" alt="writeexcel.png" /><br />对于xlsx文件可以用xlsxwriter包来实现，具体代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> xlsxwriter</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write_excel_xlsxwriter</span><span class="params">(path)</span>:</span></span><br><span class="line">    <span class="comment"># 创建一个workbook</span></span><br><span class="line">    workbook = xlsxwriter.Workbook(<span class="string">"E:\\example.xlsx"</span>)</span><br><span class="line">    <span class="comment"># 创建一个worksheet</span></span><br><span class="line">    worksheet = workbook.add_worksheet(<span class="string">'sheet1'</span>)</span><br><span class="line">    worksheet.write(<span class="number">3</span>,<span class="number">0</span>,<span class="string">"张三"</span>)</span><br><span class="line">    worksheet.write(<span class="number">3</span>, <span class="number">1</span>, <span class="number">22</span>)</span><br><span class="line">    worksheet.write(<span class="number">3</span>, <span class="number">2</span>, <span class="string">"运营"</span>)</span><br><span class="line">    workbook.close()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Excel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装SSR教程（科学上网）</title>
      <link href="/posts/2bb39acc/"/>
      <url>/posts/2bb39acc/</url>
      
        <content type="html"><![CDATA[<h1 id="安装ssr"><a class="markdownIt-Anchor" href="#安装ssr"></a> 安装SSR</h1><h2 id="获取安装脚本"><a class="markdownIt-Anchor" href="#获取安装脚本"></a> 获取安装脚本</h2><a id="more"></a><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate https://github.com/zhanghanlun/ssr/raw/master/shadowsocksR.sh</span><br></pre></td></tr></table></figure><h2 id="授予脚本权限"><a class="markdownIt-Anchor" href="#授予脚本权限"></a> 授予脚本权限</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x shadowsocksR.sh</span><br></pre></td></tr></table></figure><h2 id="安装ssr-2"><a class="markdownIt-Anchor" href="#安装ssr-2"></a> 安装ssr</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./shadowsocksR.sh 2&gt;&amp;1 | tee shadowsocksR.log</span><br></pre></td></tr></table></figure><h2 id="ssr常用命令"><a class="markdownIt-Anchor" href="#ssr常用命令"></a> ssr常用命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">启动：/etc/init.d/shadowsocks start</span><br><span class="line">停止：/etc/init.d/shadowsocks stop</span><br><span class="line">重启：/etc/init.d/shadowsocks restart</span><br><span class="line">状态：/etc/init.d/shadowsocks status</span><br><span class="line">配置文件路径：/etc/shadowsocks.json</span><br><span class="line">日志文件路径：/var/log/shadowsocks.log</span><br><span class="line">代码安装目录：/usr/local/shadowsocks</span><br></pre></td></tr></table></figure><h2 id="ssr多用户管理"><a class="markdownIt-Anchor" href="#ssr多用户管理"></a> SSR多用户管理</h2><p>打开配置文件shadowsocks.json，将配置文件文件修改为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;server&quot;: &quot;0.0.0.0&quot;,</span><br><span class="line">    &quot;port_password&quot;: &#123;</span><br><span class="line">        &quot;8381&quot;: &quot;foobar1&quot;,</span><br><span class="line">        &quot;8382&quot;: &quot;foobar2&quot;,</span><br><span class="line">        &quot;8383&quot;: &quot;foobar3&quot;,</span><br><span class="line">        &quot;8384&quot;: &quot;foobar4&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;timeout&quot;: 300,</span><br><span class="line">    &quot;method&quot;: &quot;aes-256-cfb&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重启ssr生效</p><h1 id="安装bbr加速"><a class="markdownIt-Anchor" href="#安装bbr加速"></a> 安装bbr加速</h1><h2 id="获取bbr脚本"><a class="markdownIt-Anchor" href="#获取bbr脚本"></a> 获取bbr脚本</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate https://github.com/zhanghanlun/ssr/raw/master/bbr.sh</span><br></pre></td></tr></table></figure><h2 id="脚本赋予权限"><a class="markdownIt-Anchor" href="#脚本赋予权限"></a> 脚本赋予权限</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x bbr.sh</span><br></pre></td></tr></table></figure><h2 id="执行脚本"><a class="markdownIt-Anchor" href="#执行脚本"></a> 执行脚本</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bbr.sh</span><br></pre></td></tr></table></figure><p>判断是否安装成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl net.ipv4.tcp_available_congestion_control</span><br></pre></td></tr></table></figure><p>返回的结果中有bbr则安装成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net.ipv4.tcp_available_congestion_control = reno cubic bbr</span><br></pre></td></tr></table></figure><h1 id="ssr客户端地址"><a class="markdownIt-Anchor" href="#ssr客户端地址"></a> SSR客户端地址</h1><p>将SSR安卓和win客户端上传到github了，链接如下<br /><a href="https://github.com/zhanghanlun/ssr" target="_blank" rel="noopener">下载地址</a></p>]]></content>
      
      
      <categories>
          
          <category> SSR </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSR </tag>
            
            <tag> 科学上网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GithubPage和Hexo搭建个人博客网站</title>
      <link href="/posts/cdbe0820/"/>
      <url>/posts/cdbe0820/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>github支持githubPage静态界面来搭建我们的个人博客，自己配置。</p><a id="more"></a><h1 id="创建github仓库"><a class="markdownIt-Anchor" href="#创建github仓库"></a> 创建github仓库</h1><p>创建username.github.io仓库，同时setting中勾选githubpage<br /><img src="https://tencentoss.zhanghanlun.com/blog/2020/03/760561182.jpg" alt="githubpagesetting.jpg" /><br />创建好后我们可以通过<a href="https://zhanghanlun.github.io" target="_blank" rel="noopener">zhanghanlun.github.io</a>来访问该博客</p><h1 id="利用hexo配置博客"><a class="markdownIt-Anchor" href="#利用hexo配置博客"></a> 利用hexo配置博客</h1><p>GithubPage支持Jelly和Hexo来搭建静态界面，本教程使用Hexo来搭建博客。</p><h2 id="初始化hexo"><a class="markdownIt-Anchor" href="#初始化hexo"></a> 初始化hexo</h2><p>本节截取自hexo的<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">官方文档</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install hexo-cli -g</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo init blog</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> blog</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> npm install</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo server</span></span><br></pre></td></tr></table></figure><h2 id="生成和运行静态网页"><a class="markdownIt-Anchor" href="#生成和运行静态网页"></a> 生成和运行静态网页</h2><p>通过如下命令来生成静态网页</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo generate</span></span><br></pre></td></tr></table></figure><p>通过如下命令来在本地运行静态网页</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo deploy</span></span><br></pre></td></tr></table></figure><p>第一次运行该命令，要先安装hexo-server</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install hexo-server --save</span></span><br></pre></td></tr></table></figure><p>安装完成后，输入以下命令以启动服务器，您的网站会在 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 下启动</p><h2 id="部署到github"><a class="markdownIt-Anchor" href="#部署到github"></a> 部署到Github</h2><p>安装hexo部署插件hexo-deploy-git</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install hexo-deployer-git --save</span></span><br></pre></td></tr></table></figure><p>同时修改博客配置文件_config.yml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git # 部署方式git</span><br><span class="line">  repo: git@github.com:zhanghanlun&#x2F;zhanghanlun.github.io.git #远端仓库地址</span><br><span class="line">  branch: master # 分支</span><br></pre></td></tr></table></figure><p>最后通过如下命令部署到github</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo deploy</span></span><br></pre></td></tr></table></figure><h1 id="配置next主题"><a class="markdownIt-Anchor" href="#配置next主题"></a> 配置next主题</h1><h2 id="添加next主题"><a class="markdownIt-Anchor" href="#添加next主题"></a> 添加next主题</h2><p>本节参考next主题<a href="https://github.com/theme-next/hexo-theme-nex" target="_blank" rel="noopener">官方文档</a><br />添加next主题</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> hexo</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span></span><br></pre></td></tr></table></figure><p>修改博客配置文件_config.yml,修改主题为next</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: https:&#x2F;&#x2F;hexo.io&#x2F;plugins&#x2F;</span><br><span class="line">## Themes: https:&#x2F;&#x2F;hexo.io&#x2F;themes&#x2F;</span><br><span class="line">theme: next</span><br></pre></td></tr></table></figure><h2 id="修改next主题语言"><a class="markdownIt-Anchor" href="#修改next主题语言"></a> 修改next主题语言</h2><p>在next主题最新版本中依赖博客的配置文件，而不是主题本身的配置文件的语言</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">title: 张函仑的技术博客</span><br><span class="line">subtitle: &#39;&#39;</span><br><span class="line">description: &#39;&#39;</span><br><span class="line">keywords:</span><br><span class="line">author: 张函仑</span><br><span class="line">language: zh-CN</span><br><span class="line">timezone: &#39;&#39;</span><br></pre></td></tr></table></figure><h2 id="配置标签和分类"><a class="markdownIt-Anchor" href="#配置标签和分类"></a> 配置标签和分类</h2><p>通过修改主题配置文件_config.yml来添加菜单</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: &#x2F; || home # 主页</span><br><span class="line">  about: &#x2F;about&#x2F; || user # 关于页</span><br><span class="line">  tags: &#x2F;tags&#x2F; || tags # 标签</span><br><span class="line">  categories: &#x2F;categories&#x2F; || th # 分类</span><br><span class="line">  archives: &#x2F;archives&#x2F; || archive # 归档</span><br></pre></td></tr></table></figure><p>运行命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo new page categories</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo new page tags</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo new page about</span></span><br></pre></td></tr></table></figure><h2 id="添加文章评论和文章阅读次数"><a class="markdownIt-Anchor" href="#添加文章评论和文章阅读次数"></a> 添加文章评论和文章阅读次数</h2><p>该功能通过<a href="https://valine.js.org" target="_blank" rel="noopener">valine</a>来实现，而valine是通过leancloud来实现单点<br />首先去<a href="https://leancloud.cn/" target="_blank" rel="noopener">leanclode官网</a>l注册账号然后在控制台创建一个免费的应用，找到appId和appKey。<br /><img src="https://tencentoss.zhanghanlun.com/blog/2020/03/1260950982.png" alt="leancloudsetting.jpg" /><br />修改主题配置文件_config.yml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">valine:</span><br><span class="line">  enable: true</span><br><span class="line">  appid: *** # Your leancloud application appid</span><br><span class="line">  appkey: ***  # Your leancloud application appkey</span><br><span class="line">  notify: true # Mail notifier</span><br><span class="line">  verify: false # Verification code</span><br><span class="line">  placeholder: Just go go # Comment box placeholder</span><br><span class="line">  avatar: mm # Gravatar style</span><br><span class="line">  guest_info: nick,mail,link # Custom comment header</span><br><span class="line">  pageSize: 10 # Pagination size</span><br><span class="line">  language: zh-cn # Language, available values: en, zh-cn</span><br><span class="line">  visitor: true # 文章阅读数量统计</span><br><span class="line">  comment_count: true # If false, comment count will only be displayed in post page, not in home page</span><br><span class="line">  recordIP: false # Whether to record the commenter IP</span><br><span class="line">  serverURLs: # When the custom domain name is enabled, fill it in here (it will be detected automatically by default, no need to fill in)</span><br><span class="line">  #post_meta_order: 0</span><br></pre></td></tr></table></figure><h2 id="添加本地搜索"><a class="markdownIt-Anchor" href="#添加本地搜索"></a> 添加本地搜索</h2><p>安装 hexo-generator-search</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">  npm install hexo-generator-search --save</span></span><br></pre></td></tr></table></figure><p>然后在hexo配置文件中_config.yml修改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">    path: search.xml</span><br><span class="line">    field: post</span><br><span class="line">    format: html</span><br><span class="line">    limit: 10000</span><br></pre></td></tr></table></figure><h2 id="添加打赏功能"><a class="markdownIt-Anchor" href="#添加打赏功能"></a> 添加打赏功能</h2><p>修改主题配置_config.yml,并添加收款图片到<strong>theme/next/source/image</strong>文件夹下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">reward_settings:</span><br><span class="line">  # If true, reward will be displayed in every article by default.</span><br><span class="line">  enable: true</span><br><span class="line">  animation: false</span><br><span class="line">  comment: 原创技术分享，您的支持将鼓励我继续创作。</span><br><span class="line"></span><br><span class="line">reward:</span><br><span class="line">  wechatpay: &#x2F;images&#x2F;wechatpay.png</span><br><span class="line">  alipay: &#x2F;images&#x2F;alipay.jpg</span><br></pre></td></tr></table></figure><h2 id="添加sitemap到谷歌和百度搜索"><a class="markdownIt-Anchor" href="#添加sitemap到谷歌和百度搜索"></a> 添加sitemap到谷歌和百度搜索</h2><p>安装sitemap生成插件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install hexo-generator-sitemap --save</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> npm install hexo-generator-baidu-sitemap --save</span></span><br></pre></td></tr></table></figure><p>添加hexo配置_config.yml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Plugins:</span><br><span class="line">- hexo-generator-baidu-sitemap</span><br><span class="line">- hexo-generator-sitemap</span><br><span class="line"></span><br><span class="line">baidusitemap:</span><br><span class="line">    path: baidusitemap.xml</span><br><span class="line">sitemap:</span><br><span class="line">    path: sitemap.xml</span><br></pre></td></tr></table></figure><p>同时修改hexo的url配置为你的博客域名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># URL</span><br><span class="line">## If your site is put in a subdirectory, set url as &#39;http:&#x2F;&#x2F;yoursite.com&#x2F;child&#39; and root as &#39;&#x2F;child&#x2F;&#39;</span><br><span class="line">url: https:&#x2F;&#x2F;zhanghanlun.github.io</span><br></pre></td></tr></table></figure><p>然后在<a href="https://search.google.com/search-console" target="_blank" rel="noopener">谷歌搜索网站</a>进行配置添加<br /><img src="https://tencentoss.zhanghanlun.com/blog/2020/03/3046963033.png" alt="googlesetting.jpg" /><br /><img src="https://tencentoss.zhanghanlun.com/blog/2020/03/1230373919.png" alt="googleverify.jpg" /><br />将该文件保存到source目录下<br />同理<a href="https://ziyuan.baidu.com/" target="_blank" rel="noopener">百度搜索资源平台</a>提交也是这么做<br /><strong>踩坑注意</strong>需要修改hexo配置文件,将该html在生成过程中保留原有格式不变</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">skip_render:</span><br><span class="line">    - baidu_verify_.html</span><br><span class="line">    - google.html</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> GithubPage </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用EasyExcel读写Excel</title>
      <link href="/posts/2e0b1f39/"/>
      <url>/posts/2e0b1f39/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>在没有EasyExcel之前我们经常使用Apache的poi jar包进行excel的读写，配置起来比较麻烦，也比较消耗内存，阿里开源了EasyExcel，配置上简化了，在一定程度上简化了内存溢出问题。</p><a id="more"></a><h1 id="引入jar包"><a class="markdownIt-Anchor" href="#引入jar包"></a> 引入jar包</h1><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;com.alibaba&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;easyexcel&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;1.1.2-beta5&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h1 id="读excel"><a class="markdownIt-Anchor" href="#读excel"></a> 读Excel</h1><p>EasyExcel支持对实体类中的属性进行注解，方便后续进行读写操作。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;表示第0行，表头是id</span><br><span class="line">@ExcelProperty(value &#x3D; &quot;id&quot;, index &#x3D; 0)</span><br></pre></td></tr></table></figure><h2 id="student实体类"><a class="markdownIt-Anchor" href="#student实体类"></a> Student实体类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">extends</span> <span class="title">BaseRowModel</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExcelProperty</span>(value = <span class="string">"id"</span>, index = <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExcelProperty</span>(value = <span class="string">"姓名"</span>,index = <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExcelProperty</span>(value = <span class="string">"性别"</span>, index = <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExcelProperty</span>(value = <span class="string">"年级"</span>, index = <span class="number">3</span>)</span><br><span class="line">    <span class="keyword">private</span> Integer grade;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExcelProperty</span>(value = <span class="string">"年龄"</span>, index = <span class="number">4</span>)</span><br><span class="line">    <span class="keyword">private</span> Integer score;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getSex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSex</span><span class="params">(String sex)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.sex = sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getGrade</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> grade;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setGrade</span><span class="params">(Integer grade)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.grade = grade;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getScore</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setScore</span><span class="params">(Integer score)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.score = score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Student&#123;"</span> +</span><br><span class="line">                <span class="string">"id="</span> + id +</span><br><span class="line">                <span class="string">", sex='"</span> + sex + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", grade="</span> + grade +</span><br><span class="line">                <span class="string">", score="</span> + score +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="读取excel"><a class="markdownIt-Anchor" href="#读取excel"></a> 读取Excel</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">readExcel</span><span class="params">(String fileName)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">//创建输入流</span></span><br><span class="line">            InputStream inputStream = <span class="keyword">new</span> FileInputStream(fileName);</span><br><span class="line"><span class="comment">//构建要添加Student类</span></span><br><span class="line">            Sheet sheet = <span class="keyword">new</span> Sheet(<span class="number">1</span>,<span class="number">1</span>,Student<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">            <span class="comment">//读sheet表中的内容</span></span><br><span class="line">            List&lt;Object&gt; studentList = EasyExcelFactory.read(inputStream,sheet);</span><br><span class="line">            List&lt;Student&gt; students = <span class="keyword">new</span> LinkedList&lt;Student&gt;();</span><br><span class="line">            <span class="keyword">for</span> (Object student : studentList)&#123;</span><br><span class="line">                students.add((Student)student);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (Student student : students)&#123;</span><br><span class="line">                System.out.println(student);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;结果：</span><br><span class="line">Student&#123;id&#x3D;1, sex&#x3D;&#39;男&#39;, grade&#x3D;1, score&#x3D;12&#125;</span><br><span class="line">Student&#123;id&#x3D;2, sex&#x3D;&#39;女&#39;, grade&#x3D;2, score&#x3D;13&#125;</span><br></pre></td></tr></table></figure><h1 id="写excel"><a class="markdownIt-Anchor" href="#写excel"></a> 写Excel</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">writeExcel</span><span class="params">(String fileName,List&lt;Student&gt; students)</span> </span>&#123;</span><br><span class="line">        OutputStream outputStream = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            outputStream = <span class="keyword">new</span> FileOutputStream(fileName);</span><br><span class="line">            ExcelWriter writer = <span class="keyword">new</span> ExcelWriter(outputStream, ExcelTypeEnum.XLSX);</span><br><span class="line">            Sheet sheet = <span class="keyword">new</span> Sheet(<span class="number">2</span>, <span class="number">0</span>, Student<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">            writer.write(students, sheet);</span><br><span class="line">            writer.finish();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (outputStream != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    outputStream.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> EasyExcel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决github打不开的问题</title>
      <link href="/posts/8b74c7d0/"/>
      <url>/posts/8b74c7d0/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>我们经常遇到github在电脑上打不开的问题，下面我们通过添加host来解决</p><a id="more"></a><h1 id="解决"><a class="markdownIt-Anchor" href="#解决"></a> 解决</h1><p>windows下路径为：C:\Windows\System32\drivers\etc\hosts<br />Linux下路径：/etc/hosts</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">192.30.253.113 github.com</span><br><span class="line">192.30.253.118 gist.github.com</span><br><span class="line">192.30.253.119 gist.github.com</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VSCode编译和运行C++程序</title>
      <link href="/posts/c94db0dd/"/>
      <url>/posts/c94db0dd/</url>
      
        <content type="html"><![CDATA[<h1 id="安装mingw-w64"><a class="markdownIt-Anchor" href="#安装mingw-w64"></a> 安装MinGW-w64</h1><p>在官方网站上找到下载资源的地址<a href="https://sourceforge.net/projects/mingw-w64/files/mingw-w64/mingw-w64-release/" target="_blank" rel="noopener">下载链接</a></p><a id="more"></a><p><img src="https://tencentoss.zhanghanlun.com/blog/2020/03/2002324164.jpg" alt="mingw.jpg" /><br />将压缩文件解压，然后添加环境变量到/bin目录，如图所示。<br /><img src="https://tencentoss.zhanghanlun.com/blog/2020/03/81526822.jpg" alt="运行环境.jpg" /><br />在命令窗口上运行gcc -v命令，如图所示<br /><img src="https://tencentoss.zhanghanlun.com/blog/2020/03/4173659422.png" alt="gccversion.png" /></p><h1 id="安装c运行插件"><a class="markdownIt-Anchor" href="#安装c运行插件"></a> 安装C++运行插件</h1><h2 id="安装c"><a class="markdownIt-Anchor" href="#安装c"></a> 安装C++</h2><p><img src="https://tencentoss.zhanghanlun.com/blog/2020/03/466400525.png" alt="c++.png" /></p><h2 id="安装code-runnner"><a class="markdownIt-Anchor" href="#安装code-runnner"></a> 安装Code Runnner</h2><p><img src="https://tencentoss.zhanghanlun.com/blog/2020/03/2679859813.png" alt="coderunner.png" /></p><h1 id="运行程序"><a class="markdownIt-Anchor" href="#运行程序"></a> 运行程序</h1><p><img src="https://tencentoss.zhanghanlun.com/blog/2020/03/3394691922.png" alt="run.png" /></p>]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VSCode </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux常用命令总结</title>
      <link href="/posts/1fe3367f/"/>
      <url>/posts/1fe3367f/</url>
      
        <content type="html"><![CDATA[<h1 id="日期相关"><a class="markdownIt-Anchor" href="#日期相关"></a> 日期相关</h1><p>查看时间：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@VM_0_11_centos ~]# date</span><br><span class="line">Mon Aug  6 19:11:09 CST 2018</span><br></pre></td></tr></table></figure><a id="more"></a><h1 id="目录相关"><a class="markdownIt-Anchor" href="#目录相关"></a> 目录相关</h1><h2 id="cd命令"><a class="markdownIt-Anchor" href="#cd命令"></a> cd命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//返回上一级</span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ..</span></span><br><span class="line">//返回用户目录</span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ~</span></span><br><span class="line">//打开相对路径、绝对路径</span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> dir</span></span><br></pre></td></tr></table></figure><h2 id="查看当前目录-pwd"><a class="markdownIt-Anchor" href="#查看当前目录-pwd"></a> 查看当前目录 pwd</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@VM_0_11_centos zhanghanlun]# pwd</span><br><span class="line">/root/zhanghanlun</span><br></pre></td></tr></table></figure><h2 id="ls列出目录内容"><a class="markdownIt-Anchor" href="#ls列出目录内容"></a> ls列出目录内容</h2><p>ls选项</p><table><thead><tr><th>选项</th><th>解释</th></tr></thead><tbody><tr><td>-a</td><td>列出所有文件</td></tr><tr><td>-d</td><td>目录的详细信息</td></tr><tr><td>-F</td><td>目录名会加 ’ / ’</td></tr><tr><td>-h</td><td>可读格式显示大小</td></tr><tr><td>-l</td><td>长格式输出</td></tr><tr><td>-r</td><td>相反顺序显示结果</td></tr><tr><td>-s</td><td>按照文件大小来排序</td></tr><tr><td>-t</td><td>按照修改时间来排序</td></tr></tbody></table><h2 id="less命令看文本文件"><a class="markdownIt-Anchor" href="#less命令看文本文件"></a> less命令看文本文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> less filena</span></span><br></pre></td></tr></table></figure><p><strong>q退出</strong></p><h1 id="操作文件和目录"><a class="markdownIt-Anchor" href="#操作文件和目录"></a> 操作文件和目录</h1><h2 id="mkdir-创建目录"><a class="markdownIt-Anchor" href="#mkdir-创建目录"></a> mkdir 创建目录</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> mkdir dirname</span></span><br></pre></td></tr></table></figure><h2 id="cp-复制文件和命令"><a class="markdownIt-Anchor" href="#cp-复制文件和命令"></a> cp 复制文件和命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//将item1复制到item2</span><br><span class="line"><span class="meta">$</span><span class="bash"> cp item1 item2</span></span><br></pre></td></tr></table></figure><p><strong>cp选项</strong></p><table><thead><tr><th>选项</th><th>意义</th></tr></thead><tbody><tr><td>-a</td><td>复制文件和目录</td></tr><tr><td>-i</td><td>重写文件提示</td></tr><tr><td>-r</td><td>递归复制（复制文件夹）</td></tr><tr><td>-u</td><td>仅复制不存在的文件</td></tr><tr><td>-v</td><td>显示详细的信息</td></tr></tbody></table><h2 id="mv-移动和重命名文件"><a class="markdownIt-Anchor" href="#mv-移动和重命名文件"></a> mv 移动和重命名文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//将item1移动为item2，或者将item1重命名为item2</span><br><span class="line"><span class="meta">$</span><span class="bash"> mv item1 item2</span></span><br></pre></td></tr></table></figure><p><strong>mv 选项</strong></p><table><thead><tr><th>选项</th><th>意义</th></tr></thead><tbody><tr><td>-i</td><td>重写提示</td></tr><tr><td>-u</td><td>当把文件从一个目录移动另一个目录时，只是移动不存在的文件</td></tr><tr><td>-v</td><td>详细信息</td></tr></tbody></table><h2 id="rm-删除文件和目录"><a class="markdownIt-Anchor" href="#rm-删除文件和目录"></a> rm 删除文件和目录</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//删除文件</span><br><span class="line"><span class="meta">$</span><span class="bash"> rm filename</span></span><br></pre></td></tr></table></figure><p><strong>rm选项</strong></p><table><thead><tr><th>选项</th><th>意义</th></tr></thead><tbody><tr><td>-i</td><td>提示信息</td></tr><tr><td>-r</td><td>递归删除文件（删除文件夹必备）</td></tr><tr><td>-f</td><td>不显示提示信息</td></tr><tr><td>-v</td><td>显示详细信息</td></tr></tbody></table><h2 id="通配符"><a class="markdownIt-Anchor" href="#通配符"></a> 通配符</h2><table><thead><tr><th>通配符</th><th>意义</th></tr></thead><tbody><tr><td>*</td><td>多个字符，包含0个，1个</td></tr><tr><td>？</td><td>特指一个字符</td></tr><tr><td>[   ]</td><td>一个属于字符集的元素</td></tr><tr><td>[!   ]</td><td>一个不属于特定字符集的元素</td></tr><tr><td>[[:class:]]</td><td>指定字符集中的字符</td></tr></tbody></table><h1 id="查询目录所占的空间大小"><a class="markdownIt-Anchor" href="#查询目录所占的空间大小"></a> 查询目录所占的空间大小</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> du -sh *</span></span><br></pre></td></tr></table></figure><h1 id="linux连接mysql"><a class="markdownIt-Anchor" href="#linux连接mysql"></a> Linux连接mysql</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql -h域名或者ip -P端口号 -u用户名 -p密码</span><br><span class="line"><span class="meta">$</span><span class="bash"> mysql -hlocalhost -P3306 -uroot -p123456</span></span><br></pre></td></tr></table></figure><h1 id="权限相关"><a class="markdownIt-Anchor" href="#权限相关"></a> 权限相关</h1><h2 id="chown"><a class="markdownIt-Anchor" href="#chown"></a> chown</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown [-cfhvR] [--help] [--version] user[:group] file...</span><br></pre></td></tr></table></figure><p><strong>chown选项</strong></p><table><thead><tr><th>选项</th><th>意义</th></tr></thead><tbody><tr><td>user</td><td>新的文件拥有者的使用者 ID</td></tr><tr><td>group</td><td>新的文件拥有者的使用者组(group)</td></tr><tr><td>-c</td><td>显示更改的部分的信息</td></tr><tr><td>-f</td><td>忽略错误信息</td></tr><tr><td>-h</td><td>修复符号链接</td></tr><tr><td>-v</td><td>显示详细的处理信息</td></tr><tr><td>-R</td><td>处理指定目录以及其子目录下的所有文件</td></tr></tbody></table><h2 id="chage-更改密码"><a class="markdownIt-Anchor" href="#chage-更改密码"></a> chage 更改密码</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chage user</span><br></pre></td></tr></table></figure><p>更改user的密码</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一致性Hash算法</title>
      <link href="/posts/aca386f3/"/>
      <url>/posts/aca386f3/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>  一致性哈希算法在1997年由麻省理工学院提出，设计目标是为了解决因特网中的热点(Hot spot)问题，初衷和CARP（公用地址冗余协议）十分类似。一致性哈希修正了CARP使用的简单哈希算法带来的问题，使得DHT（分布式哈希）可以在P2P环境中真正得到应用。<br />  在Memcached中的分布式缓存中、Redis的cluster模式也用到了该算法。</p><a id="more"></a><h1 id="具体实现"><a class="markdownIt-Anchor" href="#具体实现"></a> 具体实现</h1><p>我们通过一张图片来具体的阐述一致性hash算法。<br /><img src="https://tencentoss.zhanghanlun.com/blog/2020/03/915256981.jpg" width="50%"><br />原理：一致性Hash算法是使用了一种一致性Hash环数据结构来实现key到缓存服务器的hash映射。一致性Hash环将环分为0~2^32-1，查找key值的时候，计算key的hash值，然后在hash环上顺时针查找距离这个key最近的缓存服务器结点，完成key到缓存服务器的映射查找。</p><h1 id="一致性hash算法的优点和缺点"><a class="markdownIt-Anchor" href="#一致性hash算法的优点和缺点"></a> 一致性Hash算法的优点和缺点</h1><h2 id="优点容错性和可扩展性"><a class="markdownIt-Anchor" href="#优点容错性和可扩展性"></a> 优点——容错性和可扩展性</h2><p>如果结点B不幸挂了，只影响hash值在结点A和结点B之间的key的存储。增加一个结点也只影响一部分数据的重新映射。</p><h2 id="缺点数据不均匀"><a class="markdownIt-Anchor" href="#缺点数据不均匀"></a> 缺点——数据不均匀</h2><p>如果结点过少，不能保证结点均匀分布在一致性Hash环上，这个时候需要增加一些虚拟结点，让数据在缓存服务器的分布更加的均匀。</p>]]></content>
      
      
      <categories>
          
          <category> 分布式系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 分布式系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 定时执行任务(crontab命令)</title>
      <link href="/posts/7c68ca2e/"/>
      <url>/posts/7c68ca2e/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>  在Linux中我们经常会需要定时去执行一些任务脚本。在Linux中有这样一个命令就是帮助我们定时执行任务脚本的。它就是<strong>crontab</strong>。cron是一个linux下的定时执行工具，可以在无需人工干预的情况下运行作业。</p><a id="more"></a><h1 id="crontab命令"><a class="markdownIt-Anchor" href="#crontab命令"></a> crontab命令</h1><p>写定时任务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">写定时任务</span></span><br><span class="line">crontab -e</span><br><span class="line"><span class="meta">#</span><span class="bash">查看定时任务</span></span><br><span class="line">crontab -l</span><br></pre></td></tr></table></figure><h1 id="cron表达式"><a class="markdownIt-Anchor" href="#cron表达式"></a> cron表达式</h1><p>cron表达式，从crontab文件中抠出来的</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Example of job definition:</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> .---------------- minute (0 - 59) 分钟</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> |  .------------- hour (0 - 23) 小时</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> |  |  .---------- day of month (1 - 31) 几号</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ... 几月</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat 星期几</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> |  |  |  |  |</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> *  *  *  *  * user-name  <span class="built_in">command</span> to be executed</span></span><br></pre></td></tr></table></figure><p>举几个例子吧：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 每天晚上23点30分执行爬虫脚本</span></span><br><span class="line">30 23 * * * /usr/local/bin/python3 /opt/data/crawl.py</span><br><span class="line"><span class="meta">#</span><span class="bash"> 每五分钟执行爬虫脚本</span></span><br><span class="line">*/5 * * * *  /usr/local/bin/python3 /opt/data/crawl.py</span><br><span class="line"><span class="meta">#</span><span class="bash"> 每天1点-5点每小时执行一次爬虫脚本</span></span><br><span class="line">0 1-5 * * *  /usr/local/bin/python3 /opt/data/crawl.py</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 定时任务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java之Date类和Calendar类比较</title>
      <link href="/posts/4007023145/"/>
      <url>/posts/4007023145/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>目前Java版本的Date类中已经逐步抛弃getDate(）、getDay()的方法了，取而代之的是Calendar类的get()方法。所以在这边对Date类和Calendar类做一个总结。</p><a id="more"></a><h1 id="date类"><a class="markdownIt-Anchor" href="#date类"></a> Date类</h1><p>这个类的来源非常的古老，从JDK1.0就有了，但是因为后面不支持国际化，Java逐渐向Calendar类倾斜了。<br />先来谈一下Date类的使用</p><h2 id="获取当前的时间"><a class="markdownIt-Anchor" href="#获取当前的时间"></a> 获取当前的时间</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Date date = <span class="keyword">new</span> Date();</span><br><span class="line">System.out.println(date);</span><br></pre></td></tr></table></figure><p>结果为：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Thu Jun <span class="number">28</span> <span class="number">19</span>:<span class="number">24</span>:<span class="number">32</span> CST <span class="number">2018</span></span><br></pre></td></tr></table></figure><h2 id="获取分钟-小时-天-月-年等信息"><a class="markdownIt-Anchor" href="#获取分钟-小时-天-月-年等信息"></a> 获取分钟、小时、天、月、年等信息</h2><p>这类方法现在已经被JDK所放弃了，但考虑但老业务，还是继续提供接口的，不推荐大家用。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Date date = <span class="keyword">new</span> Date();</span><br><span class="line">System.out.println(date);</span><br><span class="line"><span class="comment">// 年</span></span><br><span class="line">System.out.println(date.getYear() + <span class="number">1900</span>);</span><br><span class="line"><span class="comment">// 月</span></span><br><span class="line">System.out.println(date.getMonth() + <span class="number">1</span>);</span><br><span class="line"><span class="comment">// 日</span></span><br><span class="line">System.out.println(date.getDate());</span><br><span class="line"><span class="comment">// 小时</span></span><br><span class="line">System.out.println(date.getHours());</span><br><span class="line"><span class="comment">//分钟</span></span><br><span class="line">System.out.println(date.getMinutes());</span><br><span class="line"><span class="comment">// 秒</span></span><br><span class="line">System.out.println(date.getSeconds());</span><br><span class="line"><span class="comment">// 时间戳</span></span><br><span class="line">System.out.println(date.getTime());</span><br></pre></td></tr></table></figure><p>结果为</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Thu Jun <span class="number">28</span> <span class="number">19</span>:<span class="number">47</span>:<span class="number">03</span> CST <span class="number">2018</span></span><br><span class="line"><span class="number">2018</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">28</span></span><br><span class="line"><span class="number">19</span></span><br><span class="line"><span class="number">47</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">1530186423092</span></span><br></pre></td></tr></table></figure><h1 id="date类的格式化"><a class="markdownIt-Anchor" href="#date类的格式化"></a> Date类的格式化</h1><p>我们经常用的格式是&quot;yyyy-MM-dd HH:mm:ss&quot;而Date类该怎么转呢</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Date date = <span class="keyword">new</span> Date();</span><br><span class="line">System.out.println(date);</span><br><span class="line">SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>);</span><br><span class="line"><span class="comment">// Date类型转换成 yyyy-MM-dd HH:mm:ss类型</span></span><br><span class="line">System.out.println(sdf.format(date));</span><br><span class="line">   <span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">//yyyy-MM-dd HH:mm:ss转换成Date类型</span></span><br><span class="line">       System.out.println(sdf.parse(<span class="string">"2018-06-28 19:55:42"</span>));</span><br><span class="line">   &#125; <span class="keyword">catch</span> (ParseException e) &#123;</span><br><span class="line">       e.printStackTrace();</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>结果为：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Thu Jun <span class="number">28</span> <span class="number">19</span>:<span class="number">58</span>:<span class="number">46</span> CST <span class="number">2018</span></span><br><span class="line"><span class="number">2018</span>-<span class="number">06</span>-<span class="number">28</span> <span class="number">19</span>:<span class="number">58</span>:<span class="number">46</span></span><br><span class="line">Thu Jun <span class="number">28</span> <span class="number">19</span>:<span class="number">55</span>:<span class="number">42</span> CST <span class="number">2018</span></span><br></pre></td></tr></table></figure><h1 id="calendar类"><a class="markdownIt-Anchor" href="#calendar类"></a> Calendar类</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Date date = <span class="keyword">new</span> Date();</span><br><span class="line">Calendar calendar = Calendar.getInstance();</span><br><span class="line">calendar.setTime(date);</span><br><span class="line">System.out.println(<span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>).format(date));</span><br><span class="line"><span class="comment">//年</span></span><br><span class="line">System.out.println(calendar.get(Calendar.YEAR));</span><br><span class="line"><span class="comment">//月</span></span><br><span class="line">System.out.println(calendar.get(Calendar.MONTH));</span><br><span class="line"><span class="comment">//日</span></span><br><span class="line">System.out.println(calendar.get(Calendar.DAY_OF_MONTH));</span><br><span class="line"><span class="comment">//时</span></span><br><span class="line">System.out.println(calendar.get(Calendar.HOUR_OF_DAY));</span><br><span class="line"><span class="comment">//分</span></span><br><span class="line">System.out.println(calendar.get(Calendar.MINUTE));</span><br><span class="line"><span class="comment">//秒</span></span><br><span class="line">System.out.println(calendar.get(Calendar.SECOND));</span><br></pre></td></tr></table></figure><p>结果输出为：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2018</span>-<span class="number">07</span>-<span class="number">23</span> <span class="number">15</span>:<span class="number">28</span>:<span class="number">55</span></span><br><span class="line"><span class="number">2018</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">23</span></span><br><span class="line"><span class="number">15</span></span><br><span class="line"><span class="number">28</span></span><br><span class="line"><span class="number">55</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 日期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Mybatis-generator自动生成Mybatis代码</title>
      <link href="/posts/2e64550a/"/>
      <url>/posts/2e64550a/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>在我们使用Mybatis的时候，我们想要建立数据库中表的Mybatis基本的增删改查，如果表十分复杂，我们如果手写的话会十分的繁琐，这里调用了Mybatis的自动生成工具来自动生成Mybatis的代码，生成之后，我们在做自己的一些修改就可以用了。</p><a id="more"></a><p>基本的两个步骤是：</p><blockquote><ul><li>配置pom.xml中添加<plugin></li><li>在resource目录下添加generatorConfig.xml文件</li></ul></blockquote><h1 id="配置pomxml文件"><a class="markdownIt-Anchor" href="#配置pomxml文件"></a> 配置pom.xml文件</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.generator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-generator-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">verbose</span>&gt;</span>true<span class="tag">&lt;/<span class="name">verbose</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">overwrite</span>&gt;</span>true<span class="tag">&lt;/<span class="name">overwrite</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.generator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-generator-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="写generatorconfigxml文件"><a class="markdownIt-Anchor" href="#写generatorconfigxml文件"></a> 写generatorConfig.xml文件</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">generatorConfiguration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">generatorConfiguration</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 此处写MySQL-connector的具体路径--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">classPathEntry</span></span></span><br><span class="line"><span class="tag">            <span class="attr">location</span>=<span class="string">"E:\repo\mysql\mysql-connector-java\5.1.11\mysql-connector-java-5.1.11.jar"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context</span> <span class="attr">id</span>=<span class="string">"my"</span> <span class="attr">targetRuntime</span>=<span class="string">"MyBatis3"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">commentGenerator</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suppressDate"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suppressAllComments"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">commentGenerator</span>&gt;</span>   </span><br><span class="line"><span class="comment">&lt;!-- 配置数据库的信息 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">jdbcConnection</span> <span class="attr">driverClass</span>=<span class="string">"com.mysql.jdbc.Driver"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">connectionURL</span>=<span class="string">"jdbc:mysql://localhost:3306/zhanghanlun"</span> <span class="attr">userId</span>=<span class="string">"root"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">password</span>=<span class="string">"***"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 实体类的路径配置 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaModelGenerator</span> <span class="attr">targetPackage</span>=<span class="string">"com.zhanghanlun.entity"</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">targetProject</span>=<span class="string">"src/main/java"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"enableSubPackages"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"trimStrings"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaModelGenerator</span>&gt;</span></span><br><span class="line">        </span><br><span class="line"><span class="comment">&lt;!-- Mapper.xml路径配置--&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">sqlMapGenerator</span> <span class="attr">targetPackage</span>=<span class="string">"mybatis.mapper"</span></span></span><br><span class="line"><span class="tag">                         <span class="attr">targetProject</span>=<span class="string">"src/main/resources/META-INF"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"enableSubPackages"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">sqlMapGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Mapper接口配置 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaClientGenerator</span> <span class="attr">targetPackage</span>=<span class="string">"com.zhanghanlun.mapper"</span></span></span><br><span class="line"><span class="tag">                             <span class="attr">targetProject</span>=<span class="string">"src/main/java"</span> <span class="attr">type</span>=<span class="string">"XMLMAPPER"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"enableSubPackages"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaClientGenerator</span>&gt;</span> </span><br><span class="line">               </span><br><span class="line"><span class="comment">&lt;!-- 其中tableName是表的名字，domainObjectName是实体类的名字 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">"table_example"</span> <span class="attr">domainObjectName</span>=<span class="string">"TabelExample"</span></span></span><br><span class="line"><span class="tag">               <span class="attr">enableCountByExample</span>=<span class="string">"false"</span> <span class="attr">enableUpdateByExample</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">               <span class="attr">enableDeleteByExample</span>=<span class="string">"false"</span> <span class="attr">enableSelectByExample</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">               <span class="attr">selectByExampleQueryId</span>=<span class="string">"false"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">columnRenamingRule</span> <span class="attr">searchString</span>=<span class="string">"^D_"</span></span></span><br><span class="line"><span class="tag">                                <span class="attr">replaceString</span>=<span class="string">""</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span>    </span><br><span class="line">                   </span><br><span class="line">    <span class="tag">&lt;/<span class="name">context</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">generatorConfiguration</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="运行maven生成代码"><a class="markdownIt-Anchor" href="#运行maven生成代码"></a> 运行maven生成代码</h1><p><img src="https://tencentoss.zhanghanlun.com/blog/2020/03/3920465432.jpg" alt="这里写图片描述" /></p>]]></content>
      
      
      <categories>
          
          <category> Mybatis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Mybatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git切换分支</title>
      <link href="/posts/efc7f2e2/"/>
      <url>/posts/efc7f2e2/</url>
      
        <content type="html"><![CDATA[<p>git切换分支</p><a id="more"></a><p>首先通过</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git branch -a</span></span><br></pre></td></tr></table></figure><p>来查看所在目录的分支</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git branch -a</span></span><br><span class="line">  master</span><br><span class="line">* trunk</span><br><span class="line">  remotes/origin/HEAD -&gt; origin/master</span><br><span class="line">  remotes/origin/master</span><br><span class="line">  remotes/origin/zhanghanlun</span><br></pre></td></tr></table></figure><p>然后输入命令切换分支</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git checkout -b zhanghanlun origin/zhanghanlun</span></span><br></pre></td></tr></table></figure><p>切换远程origin/zhanghanlun分支命令本地分支为&quot;zhanghanlun&quot;</p>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring获取Request输入流</title>
      <link href="/posts/6c67d8/"/>
      <url>/posts/6c67d8/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>我们在进行请求进行拦截的时候经常会碰上这样一个问题，我们想要在拦截器filter中获取request的请求，如果使用请求中默认的getInputStream()方法或者getReader()方法获取数据，但是在后面的Controller中使用@ResquestBody注解，我们读取不到request的body中的值，这是因为<strong>request的body中的数据只能通过getInputStream()和getReader()方法读取一次，要解决这个问题，我们要对重写request请求的getInputStream()和getReader()方法。</strong></p><a id="more"></a><h1 id="获取post请求的输入流并修改"><a class="markdownIt-Anchor" href="#获取post请求的输入流并修改"></a> 获取POST请求的输入流，并修改</h1><p>一般在POST请求中我们携带的信息是application/json格式的。在一些场景中我们要对这些POST请求中的application/json信息进行获取、解析。<br />先看代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">XssRequestWrapper</span> <span class="keyword">extends</span> <span class="title">HttpServletRequestWrapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Policy policy = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> AntiSamy antiSamy = <span class="keyword">new</span> AntiSamy();</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 请求Body中的String类型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String body;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * application/json转成的Map类型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Map&lt;String, String&gt; parameters = <span class="keyword">new</span> HashMap&lt;String, String&gt;();</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 字符串的流</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">byte</span>[] bytes;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断是否进行了数据的初始化</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> isInit = <span class="keyword">false</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 默认的字符串格式</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String DEFAULT_CHARSET_NAME = <span class="string">"UTF-8"</span>;</span><br><span class="line">    <span class="keyword">private</span> ObjectMapper objectMapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">XssRequestWrapper</span><span class="params">(HttpServletRequest request)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(request);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String contentType = request.getContentType();</span><br><span class="line">            <span class="keyword">if</span>(contentType.contains(<span class="string">";"</span>))&#123;</span><br><span class="line">                contentType = contentType.substring(<span class="number">0</span>,contentType.indexOf(<span class="string">";"</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//初始化bytes中的数据</span></span><br><span class="line">            initBytes();</span><br><span class="line">            <span class="comment">//解析application/json中的内容</span></span><br><span class="line">            <span class="keyword">if</span>(contentType.equals(MediaType.APPLICATION_JSON_VALUE))&#123;</span><br><span class="line">                parseJsonParameters();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"IOException"</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 第一次执行要进行数据的初始化</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initBytes</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        isInit = <span class="keyword">true</span>;</span><br><span class="line">        StringBuilder buffer = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        BufferedReader reader = <span class="keyword">this</span>.getHttpServletRequest().getReader();</span><br><span class="line">        String line;</span><br><span class="line">        <span class="keyword">while</span> ((line = reader.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">            buffer.append(line);</span><br><span class="line">        &#125;</span><br><span class="line">        body = buffer.toString();</span><br><span class="line">        <span class="comment">//获取输入流到本地</span></span><br><span class="line">        bytes = body.getBytes(DEFAULT_CHARSET_NAME);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 解析ApplicationJson数据，并且经过XSS过滤</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">parseJsonParameters</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        StringBuilder stringBuilder = <span class="keyword">new</span> StringBuilder(<span class="string">"&#123;"</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> != body &amp;&amp; body.length() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            JsonNode node = objectMapper.readTree(body);</span><br><span class="line">            Iterator&lt;String&gt; fieldNames = node.getFieldNames();</span><br><span class="line">            <span class="keyword">for</span> (; fieldNames.hasNext();) &#123;</span><br><span class="line">                String key = fieldNames.next();</span><br><span class="line">                String value = node.get(key).toString();</span><br><span class="line">                <span class="keyword">if</span> (value.length() &gt; <span class="number">2</span> &amp;&amp; value.startsWith(<span class="string">"\""</span>)) &#123;</span><br><span class="line">                    String valueTemp = value.substring(<span class="number">1</span>,value.length()-<span class="number">1</span>);</span><br><span class="line">                    valueTemp = StringEscapeUtils.unescapeJava(valueTemp);</span><br><span class="line">                    <span class="comment">//<span class="doctag">TODO:</span>XSS白名单过滤</span></span><br><span class="line">                   </span><br><span class="line">                    valueTemp = StringEscapeUtils.escapeJava(valueTemp);</span><br><span class="line">                    valueTemp = <span class="string">"\""</span> + valueTemp + <span class="string">"\""</span>;</span><br><span class="line">                    parameters.put(key, valueTemp);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    parameters.put(key, value);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(String key:parameters.keySet())&#123;</span><br><span class="line">            String value = parameters.get(key);</span><br><span class="line">            stringBuilder.append(<span class="string">"\""</span>+key+<span class="string">"\":"</span>+value+<span class="string">","</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        stringBuilder.deleteCharAt(stringBuilder.length()-<span class="number">1</span>);</span><br><span class="line">        stringBuilder.append(<span class="string">"&#125;"</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            bytes = stringBuilder.toString().getBytes(DEFAULT_CHARSET_NAME);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> HttpServletRequest <span class="title">getHttpServletRequest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (HttpServletRequest) <span class="keyword">super</span>.getRequest();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 重写getReader方法</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> BufferedReader <span class="title">getReader</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(getInputStream()));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 重写getInputStream()方法</span></span><br><span class="line"><span class="comment">     * 可以修改body内容</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ServletInputStream <span class="title">getInputStream</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!isInit)</span><br><span class="line">            initBytes();</span><br><span class="line">        <span class="keyword">final</span> ByteArrayInputStream bais = <span class="keyword">new</span> ByteArrayInputStream(bytes);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ServletInputStream() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> bais.read();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1><p>分析：获取Post请求输入流，又保证数据不丢失的步骤如下：</p><blockquote><ul><li>继承父类的构造方法，在自己的方法中进行数据的初始化</li><li>数据的初始化就是，获取输入流，写入本类的char[] bytes中</li><li>重新getInputStream()方法和getReader()方法，其中getInputStream()方法直接读取bytes字节流信息</li><li>解析application/json数据，利用JsonNode类</li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图片处理框架thumbnailator解析</title>
      <link href="/posts/25433cb9/"/>
      <url>/posts/25433cb9/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>Thumbnailator 包是处理图片缩略图的,可以对图片进行裁剪，修改格式，压缩等等。非常的方便。</p><a id="more"></a><h1 id="thumbnailator压缩图片"><a class="markdownIt-Anchor" href="#thumbnailator压缩图片"></a> Thumbnailator压缩图片</h1><h2 id="按长宽约束比例压缩"><a class="markdownIt-Anchor" href="#按长宽约束比例压缩"></a> 按长宽约束比例压缩</h2><p>简单例子代码直接上手</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Thumbnails.of(<span class="string">"D:\\Images\\0gkZ4L5sxt.jpg"</span>)<span class="comment">//输入路径</span></span><br><span class="line">                    .size(<span class="number">100</span>,<span class="number">100</span>)<span class="comment">//按长宽比例约束进行图片压缩至长宽限定的范围内</span></span><br><span class="line">                    .toFile(<span class="string">"D:\\1.jpg"</span>);<span class="comment">//输出路径</span></span><br></pre></td></tr></table></figure><p>其中of()方法可以接受三种类型的输入。</p><blockquote><ul><li>String字符串相关的路径</li><li>File类型的文件</li><li>BufferedImage类型</li></ul></blockquote><p>其中toFile()方法可以接受两种类型的输出</p><blockquote><ul><li>String字符串相关的路径</li><li>File类型</li></ul></blockquote><h2 id="直接压缩图片的大小"><a class="markdownIt-Anchor" href="#直接压缩图片的大小"></a> 直接压缩图片的大小</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Thumbnails.of(file)</span><br><span class="line">.scale(<span class="number">0.1</span>)      <span class="comment">//将长宽按照指定的比例压缩</span></span><br><span class="line">.toFile(file);</span><br></pre></td></tr></table></figure><p>例如当原图片为300 * 300像素<br />scale中的为0.1<br />得到的图片的为30 * 30像素大小</p><h1 id="thumbnailator裁剪图片"><a class="markdownIt-Anchor" href="#thumbnailator裁剪图片"></a> Thumbnailator裁剪图片</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Thumbnails.of(file)</span><br><span class="line">.sourceRegion(Positions.CENTER,<span class="number">100</span>,<span class="number">200</span>)<span class="comment">//从中心区域取像素100*200</span></span><br><span class="line">.size(<span class="number">100</span>,<span class="number">200</span>)<span class="comment">//生成100*200大小的图片</span></span><br><span class="line">.toFile(file);</span><br></pre></td></tr></table></figure><p>在上述的裁剪代码中如果图片过大，我们这么裁剪会丧失很多画面内容，例子：<br /><img src="https://tencentoss.zhanghanlun.com/blog/2020/03/3825459400.jpg" alt="2018072922533495.jpg" /><br />图片的分辨率为4852 * 2823<br />执行上面的代码生成的图片如下：<br /><img src="https://tencentoss.zhanghanlun.com/blog/2020/03/2621632345.jpg" alt="small.jpg" /><br />我们其实想把图片先压缩然后再取中间的100 * 200像素。<br />这种情况下就需要BufferedImage来实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">processImage</span><span class="params">(File file, <span class="keyword">int</span> widthThreshold, <span class="keyword">int</span> heightThreshold)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">double</span> imageRatio = (<span class="keyword">double</span>) widthThreshold / (<span class="keyword">double</span>) heightThreshold;</span><br><span class="line"></span><br><span class="line">        BufferedImage imageTemp = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            BufferedImage image = ImageIO.read(file);</span><br><span class="line">            <span class="keyword">int</span> width = image.getWidth();</span><br><span class="line">            <span class="keyword">int</span> height = image.getHeight();</span><br><span class="line">            <span class="comment">//根据长宽比来确定按那个边来压缩</span></span><br><span class="line">            <span class="keyword">if</span> ((<span class="keyword">double</span>) width / height &lt; imageRatio) &#123;</span><br><span class="line">                imageTemp = Thumbnails.of(file).width(widthThreshold).asBufferedImage();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                imageTemp = Thumbnails.of(file).height(heightThreshold).asBufferedImage();</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            Thumbnails.of(imageTemp).sourceRegion(Positions.CENTER, widthThreshold, heightThreshold)</span><br><span class="line">                    .size(widthThreshold, heightThreshold).toFile(file);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>执行完上述代码后图片为：保留了图片的更多内容<br /><img src="https://tencentoss.zhanghanlun.com/blog/2020/03/1960687445.jpg" alt="保留.jpg" /></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图片处理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c3p0数据库连接池配置总结</title>
      <link href="/posts/9e1864e2/"/>
      <url>/posts/9e1864e2/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>关于c3p0一般有这么两种配置，一种是通过set方法进行配置，另一种是通过在同src目录下的c3p0-conflg.xml文件或者c3p0.properties文件进行相关的配置。</p><a id="more"></a><h1 id="c3p0通过set方法进行配置"><a class="markdownIt-Anchor" href="#c3p0通过set方法进行配置"></a> c3p0通过set方法进行配置</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> ComboPooledDataSource dataSource = <span class="keyword">new</span> ComboPooledDataSource();</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 配置DataSource</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">configDataSource</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        dataSource.setDriverClass(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">        dataSource.setJdbcUrl(<span class="string">"jdbc:mysql://localhost:3306/zhanghanlun"</span>);</span><br><span class="line">        dataSource.setUser(<span class="string">"zhanghanlun"</span>);</span><br><span class="line">        dataSource.setPassword(<span class="string">"123456"</span>);</span><br><span class="line">        dataSource.setInitialPoolSize(<span class="number">3</span>);</span><br><span class="line">        dataSource.setMaxPoolSize(<span class="number">10</span>);</span><br><span class="line">        dataSource.setMinPoolSize(<span class="number">3</span>);</span><br><span class="line">        dataSource.setAcquireIncrement(<span class="number">3</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (PropertyVetoException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取Connection连接</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span></span>&#123;</span><br><span class="line">    Connection conn = <span class="keyword">null</span>;</span><br><span class="line">    configDataSource();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        conn = dataSource.getConnection();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> conn;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="c3p0通过c3p0-configxml文件进行配置"><a class="markdownIt-Anchor" href="#c3p0通过c3p0-configxml文件进行配置"></a> c3p0通过c3p0-config.xml文件进行配置</h1><p>关于通过配置文件进行配置的话，</p><blockquote><ul><li>这边需要把xml文件方法同src文件夹下，c3p0会扫描文件进行相关的配置。</li><li>在Maven依赖中要加入c3p0和mysql-connector-java依赖，版本号一定要写。<br />废话不多说，下面是c3p0-config.xml文件的代码</li></ul></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span>?&gt;</span><br><span class="line">&lt;c3p0-config&gt;</span><br><span class="line">    &lt;!-- 默认配置，如果没有指定则使用这个配置 --&gt;</span><br><span class="line">    &lt;<span class="keyword">default</span>-config&gt;</span><br><span class="line">        &lt;property name="user"&gt;zhanghanlun&lt;/property&gt;</span><br><span class="line">        &lt;property name="password"&gt;123456&lt;/property&gt;</span><br><span class="line">        &lt;property name=<span class="string">"jdbcUrl"</span>&gt;jdbc:mysql:<span class="comment">//localhost:3306/zhanghanlun&lt;/property&gt;</span></span><br><span class="line">        &lt;property name="driverClass"&gt;com.mysql.jdbc.Driver&lt;/property&gt;</span><br><span class="line">        &lt;property name="checkoutTimeout"&gt;30000&lt;/property&gt;</span><br><span class="line">        &lt;property name="idleConnectionTestPeriod"&gt;30&lt;/property&gt;</span><br><span class="line">        &lt;property name="initialPoolSize"&gt;3&lt;/property&gt;</span><br><span class="line">        &lt;property name="maxIdleTime"&gt;30&lt;/property&gt;</span><br><span class="line">        &lt;property name="maxPoolSize"&gt;100&lt;/property&gt;</span><br><span class="line">        &lt;property name="minPoolSize"&gt;2&lt;/property&gt;</span><br><span class="line">        &lt;property name="maxStatements"&gt;200&lt;/property&gt;</span><br><span class="line">    &lt;/default-config&gt;</span><br><span class="line">    &lt;!-- 命名的配置,可以通过方法调用实现 --&gt;</span><br><span class="line">    &lt;named-config name=<span class="string">"test"</span>&gt;</span><br><span class="line">        &lt;property name="user"&gt;zhanghanlun&lt;/property&gt;</span><br><span class="line">        &lt;property name="password"&gt;123456&lt;/property&gt;</span><br><span class="line">        &lt;property name=<span class="string">"jdbcUrl"</span>&gt;jdbc:mysql:<span class="comment">//localhost:3306/zhanghanlun&lt;/property&gt;</span></span><br><span class="line">        &lt;property name="driverClass"&gt;com.mysql.jdbc.Driver&lt;/property&gt;</span><br><span class="line">        &lt;!-- 如果池中数据连接不够时一次增长多少个 --&gt;</span><br><span class="line">        &lt;property name="acquireIncrement"&gt;5&lt;/property&gt;</span><br><span class="line">        &lt;!-- 初始化数据库连接池时连接的数量 --&gt;</span><br><span class="line">        &lt;property name="initialPoolSize"&gt;20&lt;/property&gt;</span><br><span class="line">        &lt;!-- 数据库连接池中的最大的数据库连接数 --&gt;</span><br><span class="line">        &lt;property name="maxPoolSize"&gt;25&lt;/property&gt;</span><br><span class="line">        &lt;!-- 数据库连接池中的最小的数据库连接数 --&gt;</span><br><span class="line">        &lt;property name="minPoolSize"&gt;5&lt;/property&gt;</span><br><span class="line">    &lt;/named-config&gt;</span><br><span class="line">&lt;/c3p0-config&gt;</span><br></pre></td></tr></table></figure><p>java代码对应如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//加载名字为“test”的配置文件</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> ComboPooledDataSource dataSource = <span class="keyword">new</span> ComboPooledDataSource(<span class="string">"test"</span>);</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取Connection连接</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span></span>&#123;</span><br><span class="line">    Connection conn = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        conn = dataSource.getConnection();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> conn;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>是不是代码简洁了很多，所以在我们通常使用配置文件来创建数据库的连接池。</p><h1 id="c3p0常用配置参数介绍"><a class="markdownIt-Anchor" href="#c3p0常用配置参数介绍"></a> c3p0常用配置参数介绍</h1><p>在前面的c3p0的相关配置中，我们看到了c3p0的配置参数，这里我们介绍几个常用的c3p0的配置参数</p><h2 id="最基础的参数配置"><a class="markdownIt-Anchor" href="#最基础的参数配置"></a> 最基础的参数配置：</h2><ol><li>driverClass : 数据库驱动（比如mysql，或者oracle数据库的驱动）</li><li>jdbcUrl: jdbc数据库连接地址（例如jdbc:mysql://localhost:3306/zhanghanlun）</li><li>user：数据库用户名</li><li>password:和数据库用户名对应的数据库密码</li></ol><h2 id="基础的参数配置"><a class="markdownIt-Anchor" href="#基础的参数配置"></a> 基础的参数配置</h2><table><thead><tr><th>参数</th><th>默认值</th><th>解释</th></tr></thead><tbody><tr><td>initialPoolSize</td><td>3</td><td>连接池初始化时创建的连接数（介于maxPoolSize和minPoolSize之间）</td></tr><tr><td>maxPoolSize</td><td>15</td><td>连接池中拥有的最大连接数，如果获得新连接时会使连接总数超过这个值则不会再获取新连接，而是等待其他连接释放，所以这个值有可能会设计地很大</td></tr><tr><td>minPoolSize</td><td>3</td><td>连接池保持的最小连接数，后面的maxIdleTimeExcessConnections跟这个配合使用来减轻连接池的负载</td></tr><tr><td>acquireIncrement</td><td>3</td><td>连接池在无空闲连接可用时一次性创建的新数据库连接数</td></tr></tbody></table><h2 id="管理池大小和连接时间的配置"><a class="markdownIt-Anchor" href="#管理池大小和连接时间的配置"></a> 管理池大小和连接时间的配置</h2><table><thead><tr><th>参数</th><th>默认值</th><th>解释</th></tr></thead><tbody><tr><td>maxIdleTime</td><td>0</td><td>连接的最大空闲时间，如果超过这个时间，某个数据库连接还没有被使用，则会断开掉这个连接如果为0，则永远不会断开连接</td></tr><tr><td>maxConnectorAge</td><td>0</td><td>连接的最大<strong>绝对</strong>年龄，单位是秒，0表示绝对年龄无限大</td></tr><tr><td>maxIdleTimeExcessConnection</td><td>0</td><td>单位秒，为了减轻连接池的负载，当连接池经过数据访问高峰创建了很多连接，但是后面连接池不需要维护这么多连接，必须小于maxIdleTime.配置不为0，则将连接池的数量保持到minPoolSize</td></tr></tbody></table><h2 id="配置连接测试"><a class="markdownIt-Anchor" href="#配置连接测试"></a> 配置连接测试</h2><table><thead><tr><th>参数</th><th>默认值</th><th>解释</th></tr></thead><tbody><tr><td>automaticTestTable</td><td>null</td><td>如果不为null，c3p0将生成指定名称的空表，使用该表来测试连接</td></tr><tr><td>connectionTesterClassName</td><td>com.mchange.v2.c3p0.impl.DefaultConnectionTester</td><td>-通过实现ConnectionTester或QueryConnectionTester的类来测试连接。类名需制定全路径。</td></tr><tr><td>idleConnectionTestPeriod</td><td>0</td><td>每个几秒检查所有连接池中的空闲连接</td></tr><tr><td>preferredTestQuery</td><td>null</td><td>定义所有连接测试都执行的测试语句。在使用连接测试的情况下这个一显著提高测试速度。注意： 测试的表必须在初始数据源的时候就存在</td></tr><tr><td>testConnectionOnCheckin</td><td>false</td><td>如果设为true那么在取得连接的同时将校验连接的有效性</td></tr><tr><td>testConnectionOnCheckout</td><td>false</td><td>如果为true，在连接释放的同事将校验连接的有效性。</td></tr></tbody></table><p>在这几个参数中，idleConnectionTestPeriod、testConnectionOnCheckout和testConnectuonOnCheckin控制什么时候连接将被校验检测。automaticTestTable、connectionTesterClassName和perferedTestQuery控制连接将怎么样被检测。</p><h2 id="配置语句池"><a class="markdownIt-Anchor" href="#配置语句池"></a> 配置语句池</h2><table><thead><tr><th>参数</th><th>默认值</th><th>解释</th></tr></thead><tbody><tr><td>maxStatements</td><td>0</td><td>JDBC的标准参数，用以控制数据源内加载d的PreparedStatements数量</td></tr><tr><td>maxStatementsPerConnection</td><td>0</td><td>maxStatementsPerConnection定义了连接池内单个连接所拥有的最大缓存statements数</td></tr><tr><td>statementCacheNumDeferredCloseThreads</td><td>0</td><td>如果大于零，则语句池将延迟物理close()缓存语句直到其父连接未被任何客户端使用，或者在其内部（例如在测试中）由池本身使用。</td></tr></tbody></table><h2 id="配置数据库的中断恢复"><a class="markdownIt-Anchor" href="#配置数据库的中断恢复"></a> 配置数据库的中断恢复</h2><table><thead><tr><th>参数</th><th>默认值</th><th>解释</th></tr></thead><tbody><tr><td>acquireRetryAttempts</td><td>30</td><td>定义在从数据库获取新连接失败后重复尝试的次数</td></tr><tr><td>acquireRetryDelay</td><td>1000</td><td>两次连接间隔时间，单位毫秒</td></tr><tr><td>breakAfterAcquireFailure</td><td>false</td><td>获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效 保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试 获取连接失败后该数据源将申明已断开并永久关闭</td></tr></tbody></table><h2 id="配置未解决的事务处理"><a class="markdownIt-Anchor" href="#配置未解决的事务处理"></a> 配置未解决的事务处理</h2><table><thead><tr><th>参数</th><th>默认值</th><th>解释</th></tr></thead><tbody><tr><td>autoCommitOnClose</td><td>false</td><td>连接关闭时默认将所有未提交的操作回滚。如果为true，则未提交设置为待提交而不是回滚。</td></tr><tr><td>forceIgnoreUnresolvedTransactions</td><td>false</td><td>官方文档建议这个不要设置为true</td></tr></tbody></table><h2 id="其他数据源配置"><a class="markdownIt-Anchor" href="#其他数据源配置"></a> 其他数据源配置</h2><table><thead><tr><th>参数</th><th>默认值</th><th>解释</th></tr></thead><tbody><tr><td>checkoutTimeout</td><td>0</td><td>当连接池用完时客户端调用getConnection()后等待获取新连接的时间，超时后将抛出SQLException,如设为0则无限期等待。单位毫秒。</td></tr><tr><td>factoryClassLocation</td><td>0</td><td>指定c3p0 libraries的路径，如果（通常都是这样）在本地即可获得那么无需设置，默认null即可</td></tr><tr><td>numHelperThreads</td><td>3</td><td>c3p0是异步操作的，缓慢的JDBC操作通过帮助进程完成。扩展这些操作可以有效的提升性能通过多线程实现多个操作同时被执行</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c3p0 </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HashMap源码解读—Java8</title>
      <link href="/posts/967f5fde/"/>
      <url>/posts/967f5fde/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>  在我们面试过程中，经常会遇到要求说HashMap的底层实现，在JDK源码中，Oracle公司给出了我们HashMap的源码，通过阅读HashMap的源码，我们可以很清楚的知道HashMap是怎么实现的。下面我们开始阅读HashMap的源码吧。</p><a id="more"></a><h1 id="关于hashmap的类的继承与实现"><a class="markdownIt-Anchor" href="#关于hashmap的类的继承与实现"></a> 关于HashMap的类的继承与实现</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HashMap</span>&lt;<span class="title">K</span>,<span class="title">V</span>&gt; <span class="keyword">extends</span> <span class="title">AbstractMap</span>&lt;<span class="title">K</span>,<span class="title">V</span>&gt;</span></span><br><span class="line"><span class="class">    <span class="keyword">implements</span> <span class="title">Map</span>&lt;<span class="title">K</span>,<span class="title">V</span>&gt;, <span class="title">Cloneable</span>, <span class="title">Serializable</span> </span>&#123;</span><br></pre></td></tr></table></figure><p>通过上面的代码我们知道了HashMap继承了AbstractMap这个类，实现了Map，Cloneable还有Serializable这个接口</p><h1 id="hashmap类中的常量"><a class="markdownIt-Anchor" href="#hashmap类中的常量"></a> HashMap类中的常量</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">362498820763181265L</span>;<span class="comment">//序列化ID</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 默认的初始容量一定是2的倍数，在这里是16</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DEFAULT_INITIAL_CAPACITY = <span class="number">1</span> &lt;&lt;<span class="number">4</span>;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 最大容量一定是2的倍数，而且小于2的30次方</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MAXIMUM_CAPACITY = <span class="number">1</span> &lt;&lt; <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 默认的负载因子是0.75</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">float</span> DEFAULT_LOAD_FACTOR = <span class="number">0.75f</span>;</span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 当HashMap桶中的箱子的数量达到8的时候就会将</span></span><br><span class="line"><span class="comment"> * 箱子的数据结构由链表转换成红黑树</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> TREEIFY_THRESHOLD = <span class="number">8</span>;</span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 由树转换成链表的阈值</span></span><br><span class="line"><span class="comment"> * 在HashMap进行扩容的时候，当树中结点的个数小于6的时候有，由树转换成链表</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> UNTREEIFY_THRESHOLD = <span class="number">6</span>;</span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 桶可能被树化的最小容量，至少为4*TREEIFY_THRESHOLD，</span></span><br><span class="line"><span class="comment"> * 避免扩容和树化阈值之间的冲突。</span></span><br><span class="line"><span class="comment"> * 只有当表的容量达到64之后才能进行树化</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MIN_TREEIFY_CAPACITY = <span class="number">64</span>;</span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 表，数组实现的结构</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="keyword">transient</span> Node&lt;K,V&gt;[] table;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 保存缓存的entrySet</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="keyword">transient</span> Set&lt;Map.Entry&lt;K,V&gt;&gt; entrySet;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * HashMap中存在的键值对数量</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="keyword">transient</span> <span class="keyword">int</span> size;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * HashMap结构被修改的次数</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="keyword">transient</span> <span class="keyword">int</span> modCount;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 下一个调整大小的值，容量*负载因子</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@serial</span></span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="keyword">int</span> threshold;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Hash Table的负载因子</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@serial</span></span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="keyword">final</span> <span class="keyword">float</span> loadFactor;</span><br></pre></td></tr></table></figure><h1 id="hashmap中的数据结构"><a class="markdownIt-Anchor" href="#hashmap中的数据结构"></a> HashMap中的数据结构</h1><p>HashMap中在底层的实现主要是基于数组和链表实现的，当然还有红黑树。在处理冲突的时候应用的是链表和红黑树相结合的方法，具体的实现，请看下面的图片：<br /><img src="https://tencentoss.zhanghanlun.com/blog/2020/03/930094011.jpg" alt="20180420210741559.jpg" /><br />我们知道HashMap存储的数据都存放在Entry这个数据结构中。Entry是HashMap的存储结点。<br />具体的JDK源码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Node</span>&lt;<span class="title">K</span>,<span class="title">V</span>&gt; <span class="keyword">implements</span> <span class="title">Map</span>.<span class="title">Entry</span>&lt;<span class="title">K</span>,<span class="title">V</span>&gt; </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> hash;<span class="comment">//final类型</span></span><br><span class="line">        <span class="keyword">final</span> K key;   <span class="comment">//final类型</span></span><br><span class="line">        V value;</span><br><span class="line">        Node&lt;K,V&gt; next;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">        * 结点构造函数</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        Node(<span class="keyword">int</span> hash, K key, V value, Node&lt;K,V&gt; next) &#123;</span><br><span class="line">            <span class="keyword">this</span>.hash = hash;</span><br><span class="line">            <span class="keyword">this</span>.key = key;</span><br><span class="line">            <span class="keyword">this</span>.value = value;</span><br><span class="line">            <span class="keyword">this</span>.next = next;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> K <span class="title">getKey</span><span class="params">()</span>        </span>&#123; <span class="keyword">return</span> key; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> V <span class="title">getValue</span><span class="params">()</span>      </span>&#123; <span class="keyword">return</span> value; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> key + <span class="string">"="</span> + value; &#125;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">        * 计算HashCode</span></span><br><span class="line"><span class="comment">        * 是由key的hashCode和value的HashCode进行异或产生的。</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">int</span> <span class="title">hashCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Objects.hashCode(key) ^ Objects.hashCode(value);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> V <span class="title">setValue</span><span class="params">(V newValue)</span> </span>&#123;</span><br><span class="line">            V oldValue = value;</span><br><span class="line">            value = newValue;</span><br><span class="line">            <span class="keyword">return</span> oldValue;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">        * 结点比较，地址相同则相同，Key和Value相同则相同。</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object o)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (o == <span class="keyword">this</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">if</span> (o <span class="keyword">instanceof</span> Map.Entry) &#123;</span><br><span class="line">                Map.Entry&lt;?,?&gt; e = (Map.Entry&lt;?,?&gt;)o;</span><br><span class="line">                <span class="keyword">if</span> (Objects.equals(key, e.getKey()) &amp;&amp;</span><br><span class="line">                    Objects.equals(value, e.getValue()))</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h1 id="hashmap构造函数"><a class="markdownIt-Anchor" href="#hashmap构造函数"></a> HashMap构造函数</h1><p>HashMap一共4个构造函数，分别如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 默认构造函数，负载因子为默认的0.75</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">HashMap</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       <span class="keyword">this</span>.loadFactor = DEFAULT_LOAD_FACTOR; <span class="comment">// all other fields defaulted</span></span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 构造函数初始化 初始容量和负载因子</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">HashMap</span><span class="params">(<span class="keyword">int</span> initialCapacity, <span class="keyword">float</span> loadFactor)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">if</span> (initialCapacity &lt; <span class="number">0</span>)</span><br><span class="line">           <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Illegal initial capacity: "</span> +</span><br><span class="line">                                              initialCapacity);</span><br><span class="line">       <span class="keyword">if</span> (initialCapacity &gt; MAXIMUM_CAPACITY)</span><br><span class="line">           initialCapacity = MAXIMUM_CAPACITY;</span><br><span class="line">       <span class="keyword">if</span> (loadFactor &lt;= <span class="number">0</span> || Float.isNaN(loadFactor))</span><br><span class="line">           <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Illegal load factor: "</span> +</span><br><span class="line">                                              loadFactor);</span><br><span class="line">       <span class="keyword">this</span>.loadFactor = loadFactor;</span><br><span class="line">       <span class="keyword">this</span>.threshold = tableSizeFor(initialCapacity);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 构造函数初始化 初始容量</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="title">HashMap</span><span class="params">(<span class="keyword">int</span> initialCapacity)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">this</span>(initialCapacity, DEFAULT_LOAD_FACTOR);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 构造函数，对Map进行复制构造HashMap</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="title">HashMap</span><span class="params">(Map&lt;? extends K, ? extends V&gt; m)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">this</span>.loadFactor = DEFAULT_LOAD_FACTOR;</span><br><span class="line">       putMapEntries(m, <span class="keyword">false</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">//承接上面的方法</span></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * Implements Map.putAll and Map constructor.</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> m the map</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> evict false，当刚开始构造的时候</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="function"><span class="keyword">final</span> <span class="keyword">void</span> <span class="title">putMapEntries</span><span class="params">(Map&lt;? extends K, ? extends V&gt; m, <span class="keyword">boolean</span> evict)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">int</span> s = m.size();</span><br><span class="line">       <span class="keyword">if</span> (s &gt; <span class="number">0</span>) &#123;</span><br><span class="line">       <span class="comment">//判断原先的table是否为空，初始化参数</span></span><br><span class="line">           <span class="keyword">if</span> (table == <span class="keyword">null</span>) &#123; <span class="comment">// pre-size</span></span><br><span class="line">           <span class="comment">//计算需要的表的长度</span></span><br><span class="line">               <span class="keyword">float</span> ft = ((<span class="keyword">float</span>)s / loadFactor) + <span class="number">1.0F</span>;</span><br><span class="line">               <span class="keyword">int</span> t = ((ft &lt; (<span class="keyword">float</span>)MAXIMUM_CAPACITY) ?</span><br><span class="line">                        (<span class="keyword">int</span>)ft : MAXIMUM_CAPACITY);</span><br><span class="line">               <span class="keyword">if</span> (t &gt; threshold)</span><br><span class="line">               <span class="comment">//设置阈值</span></span><br><span class="line">                   threshold = tableSizeFor(t);</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="comment">//超过阈值，进行扩容</span></span><br><span class="line">           <span class="keyword">else</span> <span class="keyword">if</span> (s &gt; threshold)</span><br><span class="line">               resize();</span><br><span class="line">           <span class="comment">//遍历Map插入Map的结点进入HashMap</span></span><br><span class="line">           <span class="keyword">for</span> (Map.Entry&lt;? extends K, ? extends V&gt; e : m.entrySet()) &#123;</span><br><span class="line">               K key = e.getKey();</span><br><span class="line">               V value = e.getValue();</span><br><span class="line">               putVal(hash(key), key, value, <span class="keyword">false</span>, evict);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h1 id="put方法"><a class="markdownIt-Anchor" href="#put方法"></a> put方法</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> V <span class="title">put</span><span class="params">(K key, V value)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> putVal(hash(key), key, value, <span class="keyword">false</span>, <span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">final</span> V <span class="title">putVal</span><span class="params">(<span class="keyword">int</span> hash, K key, V value, <span class="keyword">boolean</span> onlyIfAbsent,</span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">boolean</span> evict)</span> </span>&#123;</span><br><span class="line">Node&lt;K, V&gt;[] tab;</span><br><span class="line">    Node&lt;K, V&gt; p;</span><br><span class="line"><span class="keyword">int</span> n, i;</span><br><span class="line"><span class="comment">// 判断HashMap的table是否是空或者长度为0，执行resize操作</span></span><br><span class="line"><span class="keyword">if</span> ((tab = table) == <span class="keyword">null</span> || (n = tab.length) == <span class="number">0</span>)</span><br><span class="line">n = (tab = resize()).length;</span><br><span class="line"><span class="comment">// (n - 1) &amp; hash 计算在table表中的下标的值</span></span><br><span class="line"><span class="comment">// 此处的table为空</span></span><br><span class="line"><span class="keyword">if</span> ((p = tab[i = (n - <span class="number">1</span>) &amp; hash]) == <span class="keyword">null</span>)</span><br><span class="line">tab[i] = newNode(hash, key, value, <span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">Node&lt;K, V&gt; e;</span><br><span class="line">K k;</span><br><span class="line"><span class="comment">// hash冲突，key相等</span></span><br><span class="line"><span class="keyword">if</span> (p.hash == hash &amp;&amp; ((k = p.key) == key || (key != <span class="keyword">null</span> &amp;&amp; key.equals(k))))</span><br><span class="line">e = p;</span><br><span class="line"><span class="comment">// p是TreeNode的，调用putTreeVal方法添加TreeNode</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (p <span class="keyword">instanceof</span> TreeNode)</span><br><span class="line">e = ((TreeNode&lt;K, V&gt;) p).putTreeVal(<span class="keyword">this</span>, tab, hash, key, value);</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> binCount = <span class="number">0</span>;; ++binCount) &#123;</span><br><span class="line"><span class="comment">// 尾插法插入结点</span></span><br><span class="line"><span class="keyword">if</span> ((e = p.next) == <span class="keyword">null</span>) &#123;</span><br><span class="line">p.next = newNode(hash, key, value, <span class="keyword">null</span>);</span><br><span class="line"><span class="comment">// 如果binCount大于TREEIFY_THRESHOLD，进行树化操作</span></span><br><span class="line"><span class="keyword">if</span> (binCount &gt;= TREEIFY_THRESHOLD - <span class="number">1</span>) <span class="comment">// -1 for 1st</span></span><br><span class="line">treeifyBin(tab, hash);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (e.hash == hash &amp;&amp; ((k = e.key) == key || (key != <span class="keyword">null</span> &amp;&amp; key.equals(k))))</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">p = e;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 要插入的结点和之前的结点有相同的key值，覆盖原先的结果</span></span><br><span class="line"><span class="keyword">if</span> (e != <span class="keyword">null</span>) &#123; <span class="comment">// existing mapping for key</span></span><br><span class="line">V oldValue = e.value;</span><br><span class="line"><span class="keyword">if</span> (!onlyIfAbsent || oldValue == <span class="keyword">null</span>)</span><br><span class="line">e.value = value;</span><br><span class="line">afterNodeAccess(e);</span><br><span class="line"><span class="keyword">return</span> oldValue;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    ++modCount;</span><br><span class="line"><span class="comment">// 如果超过阈值，执行resize操作</span></span><br><span class="line"><span class="keyword">if</span> (++size &gt; threshold)</span><br><span class="line">resize();</span><br><span class="line">afterNodeInsertion(evict);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过上面的代码我们知道，put方法主要的实现是putVal方法，putVal方法的具体过程如下</p><blockquote><ul><li>判断HashMap的table的长度是否为0还是null,是的话执行resize操作</li><li>接着计算下该Hash值在table表中的下标，是否后结点Node，没有结点Node，直接调用new Node()方法生成Node结点插入该表中。</li><li>如果在该下标处存在Node结点，则判断是否是TreeNode，如果是TreeNode，则执行putTreeVal方法。</li><li>尾插法插入结点，如果改下标处的Node的结点的数量超过TREEIFY_THRESHOLD，则把Node结点树化成TreeNode结点。</li><li>如果插入的结点和之前的结点有相同的key值，覆盖原先的结果。</li><li>如果size超过阈值则进行resize操作。</li></ul></blockquote><p>在put函数中我们提到了resize操作，resize操作究竟是什么呢？让我们继续进行源码的阅读：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * HashMap的扩容方法，两次幂次展开，每箱的元素放在相同索引出或者以旧表长度为偏移量移动新表</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="keyword">final</span> Node&lt;K,V&gt;[] resize() &#123;</span><br><span class="line">    Node&lt;K,V&gt;[] oldTab = table;</span><br><span class="line">    <span class="keyword">int</span> oldCap = (oldTab == <span class="keyword">null</span>) ? <span class="number">0</span> : oldTab.length;</span><br><span class="line">    <span class="keyword">int</span> oldThr = threshold;</span><br><span class="line">    <span class="keyword">int</span> newCap, newThr = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//判断oldCap的容量</span></span><br><span class="line">    <span class="keyword">if</span> (oldCap &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (oldCap &gt;= MAXIMUM_CAPACITY) &#123;</span><br><span class="line">            threshold = Integer.MAX_VALUE;</span><br><span class="line">            <span class="keyword">return</span> oldTab;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//扩容两倍</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> ((newCap = oldCap &lt;&lt; <span class="number">1</span>) &lt; MAXIMUM_CAPACITY &amp;&amp;</span><br><span class="line">                 oldCap &gt;= DEFAULT_INITIAL_CAPACITY)</span><br><span class="line">            newThr = oldThr &lt;&lt; <span class="number">1</span>; <span class="comment">// double threshold</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (oldThr &gt; <span class="number">0</span>) <span class="comment">// 初始容量被放入阈值</span></span><br><span class="line">        newCap = oldThr;</span><br><span class="line">    <span class="keyword">else</span> &#123;               <span class="comment">// 零初始化阈值用默认值</span></span><br><span class="line">        newCap = DEFAULT_INITIAL_CAPACITY;</span><br><span class="line">        newThr = (<span class="keyword">int</span>)(DEFAULT_LOAD_FACTOR * DEFAULT_INITIAL_CAPACITY);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (newThr == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">float</span> ft = (<span class="keyword">float</span>)newCap * loadFactor;</span><br><span class="line">        newThr = (newCap &lt; MAXIMUM_CAPACITY &amp;&amp; ft &lt; (<span class="keyword">float</span>)MAXIMUM_CAPACITY ?</span><br><span class="line">                  (<span class="keyword">int</span>)ft : Integer.MAX_VALUE);</span><br><span class="line">    &#125;</span><br><span class="line">    threshold = newThr;</span><br><span class="line">    <span class="meta">@SuppressWarnings</span>(&#123;<span class="string">"rawtypes"</span>,<span class="string">"unchecked"</span>&#125;)</span><br><span class="line">    <span class="comment">//重建table</span></span><br><span class="line">    Node&lt;K,V&gt;[] newTab = (Node&lt;K,V&gt;[])<span class="keyword">new</span> Node[newCap];</span><br><span class="line">    table = newTab;</span><br><span class="line">    <span class="keyword">if</span> (oldTab != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; oldCap; ++j) &#123;</span><br><span class="line">            Node&lt;K,V&gt; e;</span><br><span class="line">            <span class="keyword">if</span> ((e = oldTab[j]) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                oldTab[j] = <span class="keyword">null</span>;</span><br><span class="line">                <span class="keyword">if</span> (e.next == <span class="keyword">null</span>)</span><br><span class="line">                    newTab[e.hash &amp; (newCap - <span class="number">1</span>)] = e;</span><br><span class="line">                <span class="comment">//如果结点是TreeNode结点，那么执行split方法</span></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (e <span class="keyword">instanceof</span> TreeNode)</span><br><span class="line">                    ((TreeNode&lt;K,V&gt;)e).split(<span class="keyword">this</span>, newTab, j, oldCap);</span><br><span class="line">                <span class="keyword">else</span> &#123; <span class="comment">// 将该链表分成两个链表，低下标链表，高下标链表</span></span><br><span class="line">                    Node&lt;K,V&gt; loHead = <span class="keyword">null</span>, loTail = <span class="keyword">null</span>;</span><br><span class="line">                    Node&lt;K,V&gt; hiHead = <span class="keyword">null</span>, hiTail = <span class="keyword">null</span>;</span><br><span class="line">                    Node&lt;K,V&gt; next;</span><br><span class="line">                    <span class="keyword">do</span> &#123;</span><br><span class="line">                        next = e.next;</span><br><span class="line">                <span class="comment">//如果e.hash&amp;oldCap==0,原来容量新增的那个bit为0，保持原索引</span></span><br><span class="line">                        <span class="keyword">if</span> ((e.hash &amp; oldCap) == <span class="number">0</span>) &#123;</span><br><span class="line">                            <span class="keyword">if</span> (loTail == <span class="keyword">null</span>)</span><br><span class="line">                                loHead = e;</span><br><span class="line">                            <span class="keyword">else</span></span><br><span class="line">                                loTail.next = e;</span><br><span class="line">                            loTail = e;</span><br><span class="line">                        &#125;</span><br><span class="line">                          <span class="comment">//如果e.hash&amp;oldCap==1,原来容量新增的那个bit为1，原索引+oldCap为新位置</span></span><br><span class="line">                        <span class="keyword">else</span> &#123;</span><br><span class="line">                            <span class="keyword">if</span> (hiTail == <span class="keyword">null</span>)</span><br><span class="line">                                hiHead = e;</span><br><span class="line">                            <span class="keyword">else</span></span><br><span class="line">                                hiTail.next = e;</span><br><span class="line">                            hiTail = e;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125; <span class="keyword">while</span> ((e = next) != <span class="keyword">null</span>);</span><br><span class="line">                        <span class="comment">//原索引放到bucket中</span></span><br><span class="line">                    <span class="keyword">if</span> (loTail != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        loTail.next = <span class="keyword">null</span>;</span><br><span class="line">                        newTab[j] = loHead;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">//原索引+oldCap放到bucket中</span></span><br><span class="line">                    <span class="keyword">if</span> (hiTail != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        hiTail.next = <span class="keyword">null</span>;</span><br><span class="line">                        newTab[j + oldCap] = hiHead;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> newTab;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>关于resize的扩容部分的具体解释，参照了美团技术团队的一篇文章《Java 8系列之重新认识HashMap》具体如图所示：<br /><img src="https://tencentoss.zhanghanlun.com/blog/2020/03/1702097553.jpg" alt="resizehashmap.jpg" /><br />根据上图我们知道：<br />原来两个的下标都是9，后来经过扩容后Key1的下标还是9，而Key2的下标变为9+16=25。</p><h1 id="get方法"><a class="markdownIt-Anchor" href="#get方法"></a> get方法</h1><p>我们在使用HashMap的时候，除了用put方法来放置我们的键值对，而且我们还使用get方法来根据我们的key值来取相关的值。首先来看代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> V <span class="title">get</span><span class="params">(Object key)</span> </span>&#123;</span><br><span class="line">    Node&lt;K,V&gt; e;</span><br><span class="line">    <span class="keyword">return</span> (e = getNode(hash(key), key)) == <span class="keyword">null</span> ? <span class="keyword">null</span> : e.value;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * HashMap的getNode方法</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> hash hash for key</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> key the key</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> the node, or null if none</span></span><br><span class="line"><span class="comment"> * 判断Hash值，然后判断key值，最后再判断key.equal</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> <span class="function"><span class="keyword">final</span> Node&lt;K,V&gt; <span class="title">getNode</span><span class="params">(<span class="keyword">int</span> hash, Object key)</span> </span>&#123;</span><br><span class="line">    Node&lt;K,V&gt;[] tab; Node&lt;K,V&gt; first, e; <span class="keyword">int</span> n; K k;</span><br><span class="line">    <span class="keyword">if</span> ((tab = table) != <span class="keyword">null</span> &amp;&amp; (n = tab.length) &gt; <span class="number">0</span> &amp;&amp;</span><br><span class="line">        (first = tab[(n - <span class="number">1</span>) &amp; hash]) != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (first.hash == hash &amp;&amp; <span class="comment">// 总是返回第一个结点</span></span><br><span class="line">            ((k = first.key) == key || (key != <span class="keyword">null</span> &amp;&amp; key.equals(k))))</span><br><span class="line">            <span class="keyword">return</span> first;</span><br><span class="line">        <span class="comment">//第一个结点不符合的话，判断后面的结点。</span></span><br><span class="line">        <span class="keyword">if</span> ((e = first.next) != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (first <span class="keyword">instanceof</span> TreeNode)</span><br><span class="line">                <span class="keyword">return</span> ((TreeNode&lt;K,V&gt;)first).getTreeNode(hash, key);</span><br><span class="line">            <span class="keyword">do</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (e.hash == hash &amp;&amp;</span><br><span class="line">                    ((k = e.key) == key || (key != <span class="keyword">null</span> &amp;&amp; key.equals(k))))</span><br><span class="line">                    <span class="keyword">return</span> e;</span><br><span class="line">            &#125; <span class="keyword">while</span> ((e = e.next) != <span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//所有结点都不符合的话，返回null</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>相比于put方法，get方法在我们看来纯粹就是小巫见大巫了，其中的基本思想如下：</p><blockquote><ul><li>先计算key对应的Hash值</li><li>然后找到在table中的下标</li><li>如果第一个结点的hash值相等的话，比对key值，如果相等返回该结点</li><li>根据链表从后往前找，找到hash值和key值都相等的就返回</li><li>如果都没有找到返回null</li></ul></blockquote><h1 id="计算hash的方法"><a class="markdownIt-Anchor" href="#计算hash的方法"></a> 计算Hash的方法</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> <span class="title">hash</span><span class="params">(Object key)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> h;</span><br><span class="line">    <span class="keyword">return</span> (key == <span class="keyword">null</span>) ? <span class="number">0</span> : (h = key.hashCode()) ^ (h &gt;&gt;&gt; <span class="number">16</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>它的思想也比较简单：</p><blockquote><ul><li>如果key==null，返回0</li><li>计算key的HashCode记为h</li><li>取h的高16位与h本身进行异或运算，即为key的Hash值</li></ul></blockquote><h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1><p>关于hashMap的讲解，美团点评技术团队有一篇博客讲的很好，<a href="https://tech.meituan.com/2016/06/24/java-hashmap.html" target="_blank" rel="noopener"><br />Java 8系列之重新认识HashMap</a></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> HashMap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中序遍历和前序遍历重建二叉树</title>
      <link href="/posts/a65c3514/"/>
      <url>/posts/a65c3514/</url>
      
        <content type="html"><![CDATA[<h2 id="中序遍历"><a class="markdownIt-Anchor" href="#中序遍历"></a> 中序遍历</h2><p>  在二叉树中，中序遍历是一种很常见的遍历方式，首先遍历左子树，然后根节点，最后右子树。</p><a id="more"></a><h2 id="前序遍历"><a class="markdownIt-Anchor" href="#前序遍历"></a> 前序遍历</h2><p>  前序遍历是先遍历根节点，然后左子树，最后右子树。</p><h2 id="重建二叉树思想"><a class="markdownIt-Anchor" href="#重建二叉树思想"></a> 重建二叉树思想</h2><p>  我们知道，前序遍历的第一个数字就是根节点，由根节点的值我们在中序遍历的序列中可以根据根节点的值区分出左子树还有右子树，以及每个子树的结点的数目，然后我们由此在前序遍历的序列中划分出相应的左右子树，进行递归进行。</p><h2 id="代码实现"><a class="markdownIt-Anchor" href="#代码实现"></a> 代码实现</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TreeNode</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> val;</span><br><span class="line">TreeNode left;</span><br><span class="line">TreeNode right;</span><br><span class="line"></span><br><span class="line">TreeNode(<span class="keyword">int</span> x) &#123;</span><br><span class="line">val = x;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line"><span class="comment">//重建二叉树</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> TreeNode <span class="title">reConstructBinaryTree</span><span class="params">(<span class="keyword">int</span> [] pre,<span class="keyword">int</span> [] in)</span> </span>&#123;</span><br><span class="line"> <span class="keyword">if</span>(pre==<span class="keyword">null</span>||in==<span class="keyword">null</span>) &#123;</span><br><span class="line"> <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="comment">//进入递归函数</span></span><br><span class="line"> <span class="keyword">return</span> reConstructTree(pre,<span class="number">0</span>,pre.length-<span class="number">1</span>,in,<span class="number">0</span>,in.length-<span class="number">1</span>);</span><br><span class="line"> </span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">public</span> TreeNode <span class="title">reConstructTree</span><span class="params">(<span class="keyword">int</span>[] pre, <span class="keyword">int</span> startPre, <span class="keyword">int</span> endPre, <span class="keyword">int</span>[] in, <span class="keyword">int</span> startIn, <span class="keyword">int</span> endIn)</span> </span>&#123;</span><br><span class="line"><span class="comment">//判断是否结束递归</span></span><br><span class="line"><span class="keyword">if</span>(startPre&gt;endPre|startIn&gt;endIn) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> rootValue = pre[<span class="number">0</span>];</span><br><span class="line">TreeNode root=<span class="keyword">new</span> TreeNode(rootValue);</span><br><span class="line">root.left=<span class="keyword">null</span>;</span><br><span class="line">root.right=<span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">int</span> indexIn=<span class="number">0</span>;</span><br><span class="line"><span class="comment">//在中序遍历序列中找到根节点的位置</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=startIn;i&lt;=endIn;i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(in[i]==rootValue) &#123;</span><br><span class="line">indexIn=i;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//左子树的结点个数</span></span><br><span class="line"><span class="keyword">int</span> leftLength= indexIn-startIn;</span><br><span class="line"><span class="keyword">int</span> leftPreEnd=startPre+leftLength;</span><br><span class="line"><span class="comment">//递归左右子树</span></span><br><span class="line">root.left=reConstructTree(pre,startPre+<span class="number">1</span>,leftPreEnd,in,startIn,indexIn-<span class="number">1</span>);</span><br><span class="line">root.right=reConstructTree(pre,leftPreEnd+<span class="number">1</span>,endPre,in,indexIn+<span class="number">1</span>,endIn);</span><br><span class="line"><span class="keyword">return</span> root;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos7安装MySQL</title>
      <link href="/posts/df149a46/"/>
      <url>/posts/df149a46/</url>
      
        <content type="html"><![CDATA[<h2 id="获取mysql安装包"><a class="markdownIt-Anchor" href="#获取mysql安装包"></a> 获取mysql安装包</h2><a id="more"></a><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm</span><br><span class="line">sudo rpm -ivh mysql-community-release-el7-5.noarch.rpm</span><br></pre></td></tr></table></figure><h2 id="安装mysql"><a class="markdownIt-Anchor" href="#安装mysql"></a> 安装mysql</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install mysql mysql-server</span><br></pre></td></tr></table></figure><h2 id="数据库启动并访问"><a class="markdownIt-Anchor" href="#数据库启动并访问"></a> 数据库启动，并访问</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="keyword">start</span> mysqld</span><br><span class="line">mysql -u root</span><br></pre></td></tr></table></figure><h2 id="授权远程访问"><a class="markdownIt-Anchor" href="#授权远程访问"></a> 授权远程访问</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> mysql;</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">privileges</span>  <span class="keyword">on</span> *.* <span class="keyword">to</span> root@<span class="string">'%'</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">'Zhl123456!'</span>;</span><br><span class="line"><span class="keyword">FLUSH</span> <span class="keyword">PRIVILEGES</span>;</span><br></pre></td></tr></table></figure><h2 id="修改登录密码"><a class="markdownIt-Anchor" href="#修改登录密码"></a> 修改登录密码</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> mysql;  </span><br><span class="line"><span class="keyword">update</span> <span class="keyword">user</span> <span class="keyword">set</span> <span class="keyword">password</span>=<span class="keyword">password</span>(<span class="string">'123'</span>) <span class="keyword">where</span> <span class="keyword">user</span>=<span class="string">'root'</span>;  </span><br><span class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
